// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: General/ProtocolBufferTransport.proto

package edu.umich.imlc.protocolbuffer.general;

public final class ProtocolBufferTransport {
  private ProtocolBufferTransport() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum ProtocolBufferScalarType
      implements com.google.protobuf.ProtocolMessageEnum {
    STRING(0, 1),
    BOOL(1, 2),
    BYTES(2, 3),
    DOUBLE(3, 4),
    FLOAT(4, 5),
    INT32(5, 6),
    INT64(6, 7),
    SINT32(7, 8),
    SINT64(8, 9),
    UINT32(9, 10),
    UINT64(10, 11),
    SFIXED32(11, 12),
    SFIXED64(12, 13),
    FIXED32(13, 14),
    FIXED64(14, 15),
    STRING_LIST(15, 16),
    BOOL_LIST(16, 17),
    BYTES_LIST(17, 18),
    DOUBLE_LIST(18, 19),
    FLOAT_LIST(19, 20),
    INT32_LIST(20, 21),
    INT64_LIST(21, 22),
    SINT32_LIST(22, 23),
    SINT64_LIST(23, 24),
    UINT32_LIST(24, 25),
    UINT64_LIST(25, 26),
    SFIXED32_LIST(26, 27),
    SFIXED64_LIST(27, 28),
    FIXED32_LIST(28, 29),
    FIXED64_LIST(29, 30),
    ;
    
    public static final int STRING_VALUE = 1;
    public static final int BOOL_VALUE = 2;
    public static final int BYTES_VALUE = 3;
    public static final int DOUBLE_VALUE = 4;
    public static final int FLOAT_VALUE = 5;
    public static final int INT32_VALUE = 6;
    public static final int INT64_VALUE = 7;
    public static final int SINT32_VALUE = 8;
    public static final int SINT64_VALUE = 9;
    public static final int UINT32_VALUE = 10;
    public static final int UINT64_VALUE = 11;
    public static final int SFIXED32_VALUE = 12;
    public static final int SFIXED64_VALUE = 13;
    public static final int FIXED32_VALUE = 14;
    public static final int FIXED64_VALUE = 15;
    public static final int STRING_LIST_VALUE = 16;
    public static final int BOOL_LIST_VALUE = 17;
    public static final int BYTES_LIST_VALUE = 18;
    public static final int DOUBLE_LIST_VALUE = 19;
    public static final int FLOAT_LIST_VALUE = 20;
    public static final int INT32_LIST_VALUE = 21;
    public static final int INT64_LIST_VALUE = 22;
    public static final int SINT32_LIST_VALUE = 23;
    public static final int SINT64_LIST_VALUE = 24;
    public static final int UINT32_LIST_VALUE = 25;
    public static final int UINT64_LIST_VALUE = 26;
    public static final int SFIXED32_LIST_VALUE = 27;
    public static final int SFIXED64_LIST_VALUE = 28;
    public static final int FIXED32_LIST_VALUE = 29;
    public static final int FIXED64_LIST_VALUE = 30;
    
    
    public final int getNumber() { return value; }
    
    public static ProtocolBufferScalarType valueOf(int value) {
      switch (value) {
        case 1: return STRING;
        case 2: return BOOL;
        case 3: return BYTES;
        case 4: return DOUBLE;
        case 5: return FLOAT;
        case 6: return INT32;
        case 7: return INT64;
        case 8: return SINT32;
        case 9: return SINT64;
        case 10: return UINT32;
        case 11: return UINT64;
        case 12: return SFIXED32;
        case 13: return SFIXED64;
        case 14: return FIXED32;
        case 15: return FIXED64;
        case 16: return STRING_LIST;
        case 17: return BOOL_LIST;
        case 18: return BYTES_LIST;
        case 19: return DOUBLE_LIST;
        case 20: return FLOAT_LIST;
        case 21: return INT32_LIST;
        case 22: return INT64_LIST;
        case 23: return SINT32_LIST;
        case 24: return SINT64_LIST;
        case 25: return UINT32_LIST;
        case 26: return UINT64_LIST;
        case 27: return SFIXED32_LIST;
        case 28: return SFIXED64_LIST;
        case 29: return FIXED32_LIST;
        case 30: return FIXED64_LIST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ProtocolBufferScalarType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ProtocolBufferScalarType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProtocolBufferScalarType>() {
            public ProtocolBufferScalarType findValueByNumber(int number) {
              return ProtocolBufferScalarType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final ProtocolBufferScalarType[] VALUES = {
      STRING, BOOL, BYTES, DOUBLE, FLOAT, INT32, INT64, SINT32, SINT64, UINT32, UINT64, SFIXED32, SFIXED64, FIXED32, FIXED64, STRING_LIST, BOOL_LIST, BYTES_LIST, DOUBLE_LIST, FLOAT_LIST, INT32_LIST, INT64_LIST, SINT32_LIST, SINT64_LIST, UINT32_LIST, UINT64_LIST, SFIXED32_LIST, SFIXED64_LIST, FIXED32_LIST, FIXED64_LIST, 
    };
    
    public static ProtocolBufferScalarType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ProtocolBufferScalarType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ProtocolBufferScalarType)
  }
  
  public enum DayOfWeekType
      implements com.google.protobuf.ProtocolMessageEnum {
    DAY_OF_WEEK_NOT_SET(0, 0),
    SUNDAY(1, 1),
    MONDAY(2, 2),
    TUESDAY(3, 3),
    WEDNESDAY(4, 4),
    THURSDAY(5, 5),
    FRIDAY(6, 6),
    SATURDAY(7, 7),
    ;
    
    public static final int DAY_OF_WEEK_NOT_SET_VALUE = 0;
    public static final int SUNDAY_VALUE = 1;
    public static final int MONDAY_VALUE = 2;
    public static final int TUESDAY_VALUE = 3;
    public static final int WEDNESDAY_VALUE = 4;
    public static final int THURSDAY_VALUE = 5;
    public static final int FRIDAY_VALUE = 6;
    public static final int SATURDAY_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static DayOfWeekType valueOf(int value) {
      switch (value) {
        case 0: return DAY_OF_WEEK_NOT_SET;
        case 1: return SUNDAY;
        case 2: return MONDAY;
        case 3: return TUESDAY;
        case 4: return WEDNESDAY;
        case 5: return THURSDAY;
        case 6: return FRIDAY;
        case 7: return SATURDAY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DayOfWeekType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DayOfWeekType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DayOfWeekType>() {
            public DayOfWeekType findValueByNumber(int number) {
              return DayOfWeekType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final DayOfWeekType[] VALUES = {
      DAY_OF_WEEK_NOT_SET, SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, 
    };
    
    public static DayOfWeekType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DayOfWeekType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:DayOfWeekType)
  }
  
  public interface GenericTransportOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes payload = 1;
    boolean hasPayload();
    com.google.protobuf.ByteString getPayload();
    
    // optional .GenericPropertyList property_list = 2;
    boolean hasPropertyList();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList getPropertyList();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder getPropertyListOrBuilder();
    
    // optional string type_name = 3;
    boolean hasTypeName();
    String getTypeName();
  }
  public static final class GenericTransport extends
      com.google.protobuf.GeneratedMessage
      implements GenericTransportOrBuilder {
    // Use GenericTransport.newBuilder() to construct.
    private GenericTransport(Builder builder) {
      super(builder);
    }
    private GenericTransport(boolean noInit) {}
    
    private static final GenericTransport defaultInstance;
    public static GenericTransport getDefaultInstance() {
      return defaultInstance;
    }
    
    public GenericTransport getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericTransport_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericTransport_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes payload = 1;
    public static final int PAYLOAD_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString payload_;
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }
    
    // optional .GenericPropertyList property_list = 2;
    public static final int PROPERTY_LIST_FIELD_NUMBER = 2;
    private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList propertyList_;
    public boolean hasPropertyList() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList getPropertyList() {
      return propertyList_;
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder getPropertyListOrBuilder() {
      return propertyList_;
    }
    
    // optional string type_name = 3;
    public static final int TYPE_NAME_FIELD_NUMBER = 3;
    private java.lang.Object typeName_;
    public boolean hasTypeName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getTypeName() {
      java.lang.Object ref = typeName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          typeName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeNameBytes() {
      java.lang.Object ref = typeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      payload_ = com.google.protobuf.ByteString.EMPTY;
      propertyList_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance();
      typeName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, payload_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, propertyList_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTypeNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, payload_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, propertyList_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTypeNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericTransport_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericTransport_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPropertyListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (propertyListBuilder_ == null) {
          propertyList_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance();
        } else {
          propertyListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        typeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.payload_ = payload_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (propertyListBuilder_ == null) {
          result.propertyList_ = propertyList_;
        } else {
          result.propertyList_ = propertyListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.typeName_ = typeName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance()) return this;
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        if (other.hasPropertyList()) {
          mergePropertyList(other.getPropertyList());
        }
        if (other.hasTypeName()) {
          setTypeName(other.getTypeName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              payload_ = input.readBytes();
              break;
            }
            case 18: {
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder subBuilder = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.newBuilder();
              if (hasPropertyList()) {
                subBuilder.mergeFrom(getPropertyList());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPropertyList(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              typeName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes payload = 1;
      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        payload_ = value;
        onChanged();
        return this;
      }
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000001);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      
      // optional .GenericPropertyList property_list = 2;
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList propertyList_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder> propertyListBuilder_;
      public boolean hasPropertyList() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList getPropertyList() {
        if (propertyListBuilder_ == null) {
          return propertyList_;
        } else {
          return propertyListBuilder_.getMessage();
        }
      }
      public Builder setPropertyList(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList value) {
        if (propertyListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          propertyList_ = value;
          onChanged();
        } else {
          propertyListBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setPropertyList(
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder builderForValue) {
        if (propertyListBuilder_ == null) {
          propertyList_ = builderForValue.build();
          onChanged();
        } else {
          propertyListBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergePropertyList(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList value) {
        if (propertyListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              propertyList_ != edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance()) {
            propertyList_ =
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.newBuilder(propertyList_).mergeFrom(value).buildPartial();
          } else {
            propertyList_ = value;
          }
          onChanged();
        } else {
          propertyListBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearPropertyList() {
        if (propertyListBuilder_ == null) {
          propertyList_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance();
          onChanged();
        } else {
          propertyListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder getPropertyListBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPropertyListFieldBuilder().getBuilder();
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder getPropertyListOrBuilder() {
        if (propertyListBuilder_ != null) {
          return propertyListBuilder_.getMessageOrBuilder();
        } else {
          return propertyList_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder> 
          getPropertyListFieldBuilder() {
        if (propertyListBuilder_ == null) {
          propertyListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder>(
                  propertyList_,
                  getParentForChildren(),
                  isClean());
          propertyList_ = null;
        }
        return propertyListBuilder_;
      }
      
      // optional string type_name = 3;
      private java.lang.Object typeName_ = "";
      public boolean hasTypeName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getTypeName() {
        java.lang.Object ref = typeName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          typeName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTypeName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        typeName_ = value;
        onChanged();
        return this;
      }
      public Builder clearTypeName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        typeName_ = getDefaultInstance().getTypeName();
        onChanged();
        return this;
      }
      void setTypeName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        typeName_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:GenericTransport)
    }
    
    static {
      defaultInstance = new GenericTransport(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GenericTransport)
  }
  
  public interface SimplePropertyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string property_name = 1;
    boolean hasPropertyName();
    String getPropertyName();
    
    // optional string property_value = 2;
    boolean hasPropertyValue();
    String getPropertyValue();
  }
  public static final class SimpleProperty extends
      com.google.protobuf.GeneratedMessage
      implements SimplePropertyOrBuilder {
    // Use SimpleProperty.newBuilder() to construct.
    private SimpleProperty(Builder builder) {
      super(builder);
    }
    private SimpleProperty(boolean noInit) {}
    
    private static final SimpleProperty defaultInstance;
    public static SimpleProperty getDefaultInstance() {
      return defaultInstance;
    }
    
    public SimpleProperty getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_SimpleProperty_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_SimpleProperty_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string property_name = 1;
    public static final int PROPERTY_NAME_FIELD_NUMBER = 1;
    private java.lang.Object propertyName_;
    public boolean hasPropertyName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPropertyName() {
      java.lang.Object ref = propertyName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          propertyName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPropertyNameBytes() {
      java.lang.Object ref = propertyName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        propertyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string property_value = 2;
    public static final int PROPERTY_VALUE_FIELD_NUMBER = 2;
    private java.lang.Object propertyValue_;
    public boolean hasPropertyValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPropertyValue() {
      java.lang.Object ref = propertyValue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          propertyValue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPropertyValueBytes() {
      java.lang.Object ref = propertyValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        propertyValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      propertyName_ = "";
      propertyValue_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPropertyNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPropertyValueBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPropertyNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPropertyValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimplePropertyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_SimpleProperty_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_SimpleProperty_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        propertyName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        propertyValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.propertyName_ = propertyName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.propertyValue_ = propertyValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty.getDefaultInstance()) return this;
        if (other.hasPropertyName()) {
          setPropertyName(other.getPropertyName());
        }
        if (other.hasPropertyValue()) {
          setPropertyValue(other.getPropertyValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              propertyName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              propertyValue_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string property_name = 1;
      private java.lang.Object propertyName_ = "";
      public boolean hasPropertyName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPropertyName() {
        java.lang.Object ref = propertyName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          propertyName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPropertyName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        propertyName_ = value;
        onChanged();
        return this;
      }
      public Builder clearPropertyName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        propertyName_ = getDefaultInstance().getPropertyName();
        onChanged();
        return this;
      }
      void setPropertyName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        propertyName_ = value;
        onChanged();
      }
      
      // optional string property_value = 2;
      private java.lang.Object propertyValue_ = "";
      public boolean hasPropertyValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPropertyValue() {
        java.lang.Object ref = propertyValue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          propertyValue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPropertyValue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        propertyValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearPropertyValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        propertyValue_ = getDefaultInstance().getPropertyValue();
        onChanged();
        return this;
      }
      void setPropertyValue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        propertyValue_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:SimpleProperty)
    }
    
    static {
      defaultInstance = new SimpleProperty(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SimpleProperty)
  }
  
  public interface GenericPropertyListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .GenericProperty property = 1;
    java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty> 
        getPropertyList();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty getProperty(int index);
    int getPropertyCount();
    java.util.List<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder> 
        getPropertyOrBuilderList();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder getPropertyOrBuilder(
        int index);
  }
  public static final class GenericPropertyList extends
      com.google.protobuf.GeneratedMessage
      implements GenericPropertyListOrBuilder {
    // Use GenericPropertyList.newBuilder() to construct.
    private GenericPropertyList(Builder builder) {
      super(builder);
    }
    private GenericPropertyList(boolean noInit) {}
    
    private static final GenericPropertyList defaultInstance;
    public static GenericPropertyList getDefaultInstance() {
      return defaultInstance;
    }
    
    public GenericPropertyList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericPropertyList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericPropertyList_fieldAccessorTable;
    }
    
    // repeated .GenericProperty property = 1;
    public static final int PROPERTY_FIELD_NUMBER = 1;
    private java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty> property_;
    public java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty> getPropertyList() {
      return property_;
    }
    public java.util.List<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder> 
        getPropertyOrBuilderList() {
      return property_;
    }
    public int getPropertyCount() {
      return property_.size();
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty getProperty(int index) {
      return property_.get(index);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder getPropertyOrBuilder(
        int index) {
      return property_.get(index);
    }
    
    private void initFields() {
      property_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < property_.size(); i++) {
        output.writeMessage(1, property_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < property_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, property_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericPropertyList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericPropertyList_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPropertyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (propertyBuilder_ == null) {
          property_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propertyBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList(this);
        int from_bitField0_ = bitField0_;
        if (propertyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            property_ = java.util.Collections.unmodifiableList(property_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.property_ = property_;
        } else {
          result.property_ = propertyBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.getDefaultInstance()) return this;
        if (propertyBuilder_ == null) {
          if (!other.property_.isEmpty()) {
            if (property_.isEmpty()) {
              property_ = other.property_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropertyIsMutable();
              property_.addAll(other.property_);
            }
            onChanged();
          }
        } else {
          if (!other.property_.isEmpty()) {
            if (propertyBuilder_.isEmpty()) {
              propertyBuilder_.dispose();
              propertyBuilder_ = null;
              property_ = other.property_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propertyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPropertyFieldBuilder() : null;
            } else {
              propertyBuilder_.addAllMessages(other.property_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder subBuilder = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProperty(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .GenericProperty property = 1;
      private java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty> property_ =
        java.util.Collections.emptyList();
      private void ensurePropertyIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          property_ = new java.util.ArrayList<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty>(property_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder> propertyBuilder_;
      
      public java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty> getPropertyList() {
        if (propertyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(property_);
        } else {
          return propertyBuilder_.getMessageList();
        }
      }
      public int getPropertyCount() {
        if (propertyBuilder_ == null) {
          return property_.size();
        } else {
          return propertyBuilder_.getCount();
        }
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty getProperty(int index) {
        if (propertyBuilder_ == null) {
          return property_.get(index);
        } else {
          return propertyBuilder_.getMessage(index);
        }
      }
      public Builder setProperty(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty value) {
        if (propertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertyIsMutable();
          property_.set(index, value);
          onChanged();
        } else {
          propertyBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setProperty(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder builderForValue) {
        if (propertyBuilder_ == null) {
          ensurePropertyIsMutable();
          property_.set(index, builderForValue.build());
          onChanged();
        } else {
          propertyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addProperty(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty value) {
        if (propertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertyIsMutable();
          property_.add(value);
          onChanged();
        } else {
          propertyBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addProperty(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty value) {
        if (propertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropertyIsMutable();
          property_.add(index, value);
          onChanged();
        } else {
          propertyBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addProperty(
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder builderForValue) {
        if (propertyBuilder_ == null) {
          ensurePropertyIsMutable();
          property_.add(builderForValue.build());
          onChanged();
        } else {
          propertyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addProperty(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder builderForValue) {
        if (propertyBuilder_ == null) {
          ensurePropertyIsMutable();
          property_.add(index, builderForValue.build());
          onChanged();
        } else {
          propertyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllProperty(
          java.lang.Iterable<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty> values) {
        if (propertyBuilder_ == null) {
          ensurePropertyIsMutable();
          super.addAll(values, property_);
          onChanged();
        } else {
          propertyBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearProperty() {
        if (propertyBuilder_ == null) {
          property_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propertyBuilder_.clear();
        }
        return this;
      }
      public Builder removeProperty(int index) {
        if (propertyBuilder_ == null) {
          ensurePropertyIsMutable();
          property_.remove(index);
          onChanged();
        } else {
          propertyBuilder_.remove(index);
        }
        return this;
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder getPropertyBuilder(
          int index) {
        return getPropertyFieldBuilder().getBuilder(index);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder getPropertyOrBuilder(
          int index) {
        if (propertyBuilder_ == null) {
          return property_.get(index);  } else {
          return propertyBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder> 
           getPropertyOrBuilderList() {
        if (propertyBuilder_ != null) {
          return propertyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(property_);
        }
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder addPropertyBuilder() {
        return getPropertyFieldBuilder().addBuilder(
            edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.getDefaultInstance());
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder addPropertyBuilder(
          int index) {
        return getPropertyFieldBuilder().addBuilder(
            index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.getDefaultInstance());
      }
      public java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder> 
           getPropertyBuilderList() {
        return getPropertyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder> 
          getPropertyFieldBuilder() {
        if (propertyBuilder_ == null) {
          propertyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder>(
                  property_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          property_ = null;
        }
        return propertyBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:GenericPropertyList)
    }
    
    static {
      defaultInstance = new GenericPropertyList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GenericPropertyList)
  }
  
  public interface GenericPropertyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string property_name = 1;
    boolean hasPropertyName();
    String getPropertyName();
    
    // optional .ProtocolBufferScalarType scalar_type = 2;
    boolean hasScalarType();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType getScalarType();
    
    // optional string string_value = 3;
    boolean hasStringValue();
    String getStringValue();
    
    // optional bool bool_value = 4;
    boolean hasBoolValue();
    boolean getBoolValue();
    
    // optional bytes bytes_value = 5;
    boolean hasBytesValue();
    com.google.protobuf.ByteString getBytesValue();
    
    // optional double double_value = 6;
    boolean hasDoubleValue();
    double getDoubleValue();
    
    // optional float float_value = 7;
    boolean hasFloatValue();
    float getFloatValue();
    
    // optional int32 int32_value = 8;
    boolean hasInt32Value();
    int getInt32Value();
    
    // optional int64 int64_value = 9;
    boolean hasInt64Value();
    long getInt64Value();
    
    // optional sint32 sint32_value = 10;
    boolean hasSint32Value();
    int getSint32Value();
    
    // optional sint64 sint64_value = 11;
    boolean hasSint64Value();
    long getSint64Value();
    
    // optional uint32 uint32_value = 12;
    boolean hasUint32Value();
    int getUint32Value();
    
    // optional uint64 uint64_value = 13;
    boolean hasUint64Value();
    long getUint64Value();
    
    // optional sfixed32 sfixed32_value = 14;
    boolean hasSfixed32Value();
    int getSfixed32Value();
    
    // optional sfixed64 sfixed64_value = 15;
    boolean hasSfixed64Value();
    long getSfixed64Value();
    
    // optional fixed32 fixed32_value = 16;
    boolean hasFixed32Value();
    int getFixed32Value();
    
    // optional fixed64 fixed64_value = 17;
    boolean hasFixed64Value();
    long getFixed64Value();
    
    // repeated string string_element = 18;
    java.util.List<String> getStringElementList();
    int getStringElementCount();
    String getStringElement(int index);
    
    // repeated bool bool_element = 19;
    java.util.List<java.lang.Boolean> getBoolElementList();
    int getBoolElementCount();
    boolean getBoolElement(int index);
    
    // repeated bytes bytes_element = 20;
    java.util.List<com.google.protobuf.ByteString> getBytesElementList();
    int getBytesElementCount();
    com.google.protobuf.ByteString getBytesElement(int index);
    
    // repeated double double_element = 21;
    java.util.List<java.lang.Double> getDoubleElementList();
    int getDoubleElementCount();
    double getDoubleElement(int index);
    
    // repeated float float_element = 22;
    java.util.List<java.lang.Float> getFloatElementList();
    int getFloatElementCount();
    float getFloatElement(int index);
    
    // repeated int32 int32_element = 23;
    java.util.List<java.lang.Integer> getInt32ElementList();
    int getInt32ElementCount();
    int getInt32Element(int index);
    
    // repeated int64 int64_element = 24;
    java.util.List<java.lang.Long> getInt64ElementList();
    int getInt64ElementCount();
    long getInt64Element(int index);
    
    // repeated sint32 sint32_element = 25;
    java.util.List<java.lang.Integer> getSint32ElementList();
    int getSint32ElementCount();
    int getSint32Element(int index);
    
    // repeated sint64 sint64_element = 26;
    java.util.List<java.lang.Long> getSint64ElementList();
    int getSint64ElementCount();
    long getSint64Element(int index);
    
    // repeated uint32 uint32_element = 27;
    java.util.List<java.lang.Integer> getUint32ElementList();
    int getUint32ElementCount();
    int getUint32Element(int index);
    
    // repeated uint64 uint64_element = 28;
    java.util.List<java.lang.Long> getUint64ElementList();
    int getUint64ElementCount();
    long getUint64Element(int index);
    
    // repeated sfixed32 sfixed32_element = 29;
    java.util.List<java.lang.Integer> getSfixed32ElementList();
    int getSfixed32ElementCount();
    int getSfixed32Element(int index);
    
    // repeated sfixed64 sfixed64_element = 30;
    java.util.List<java.lang.Long> getSfixed64ElementList();
    int getSfixed64ElementCount();
    long getSfixed64Element(int index);
    
    // repeated fixed32 fixed32_element = 31;
    java.util.List<java.lang.Integer> getFixed32ElementList();
    int getFixed32ElementCount();
    int getFixed32Element(int index);
    
    // repeated fixed64 fixed64_element = 32;
    java.util.List<java.lang.Long> getFixed64ElementList();
    int getFixed64ElementCount();
    long getFixed64Element(int index);
  }
  public static final class GenericProperty extends
      com.google.protobuf.GeneratedMessage
      implements GenericPropertyOrBuilder {
    // Use GenericProperty.newBuilder() to construct.
    private GenericProperty(Builder builder) {
      super(builder);
    }
    private GenericProperty(boolean noInit) {}
    
    private static final GenericProperty defaultInstance;
    public static GenericProperty getDefaultInstance() {
      return defaultInstance;
    }
    
    public GenericProperty getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericProperty_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericProperty_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string property_name = 1;
    public static final int PROPERTY_NAME_FIELD_NUMBER = 1;
    private java.lang.Object propertyName_;
    public boolean hasPropertyName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPropertyName() {
      java.lang.Object ref = propertyName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          propertyName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPropertyNameBytes() {
      java.lang.Object ref = propertyName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        propertyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .ProtocolBufferScalarType scalar_type = 2;
    public static final int SCALAR_TYPE_FIELD_NUMBER = 2;
    private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType scalarType_;
    public boolean hasScalarType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType getScalarType() {
      return scalarType_;
    }
    
    // optional string string_value = 3;
    public static final int STRING_VALUE_FIELD_NUMBER = 3;
    private java.lang.Object stringValue_;
    public boolean hasStringValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          stringValue_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool bool_value = 4;
    public static final int BOOL_VALUE_FIELD_NUMBER = 4;
    private boolean boolValue_;
    public boolean hasBoolValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getBoolValue() {
      return boolValue_;
    }
    
    // optional bytes bytes_value = 5;
    public static final int BYTES_VALUE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString bytesValue_;
    public boolean hasBytesValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }
    
    // optional double double_value = 6;
    public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
    private double doubleValue_;
    public boolean hasDoubleValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getDoubleValue() {
      return doubleValue_;
    }
    
    // optional float float_value = 7;
    public static final int FLOAT_VALUE_FIELD_NUMBER = 7;
    private float floatValue_;
    public boolean hasFloatValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getFloatValue() {
      return floatValue_;
    }
    
    // optional int32 int32_value = 8;
    public static final int INT32_VALUE_FIELD_NUMBER = 8;
    private int int32Value_;
    public boolean hasInt32Value() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getInt32Value() {
      return int32Value_;
    }
    
    // optional int64 int64_value = 9;
    public static final int INT64_VALUE_FIELD_NUMBER = 9;
    private long int64Value_;
    public boolean hasInt64Value() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public long getInt64Value() {
      return int64Value_;
    }
    
    // optional sint32 sint32_value = 10;
    public static final int SINT32_VALUE_FIELD_NUMBER = 10;
    private int sint32Value_;
    public boolean hasSint32Value() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getSint32Value() {
      return sint32Value_;
    }
    
    // optional sint64 sint64_value = 11;
    public static final int SINT64_VALUE_FIELD_NUMBER = 11;
    private long sint64Value_;
    public boolean hasSint64Value() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public long getSint64Value() {
      return sint64Value_;
    }
    
    // optional uint32 uint32_value = 12;
    public static final int UINT32_VALUE_FIELD_NUMBER = 12;
    private int uint32Value_;
    public boolean hasUint32Value() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getUint32Value() {
      return uint32Value_;
    }
    
    // optional uint64 uint64_value = 13;
    public static final int UINT64_VALUE_FIELD_NUMBER = 13;
    private long uint64Value_;
    public boolean hasUint64Value() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public long getUint64Value() {
      return uint64Value_;
    }
    
    // optional sfixed32 sfixed32_value = 14;
    public static final int SFIXED32_VALUE_FIELD_NUMBER = 14;
    private int sfixed32Value_;
    public boolean hasSfixed32Value() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getSfixed32Value() {
      return sfixed32Value_;
    }
    
    // optional sfixed64 sfixed64_value = 15;
    public static final int SFIXED64_VALUE_FIELD_NUMBER = 15;
    private long sfixed64Value_;
    public boolean hasSfixed64Value() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public long getSfixed64Value() {
      return sfixed64Value_;
    }
    
    // optional fixed32 fixed32_value = 16;
    public static final int FIXED32_VALUE_FIELD_NUMBER = 16;
    private int fixed32Value_;
    public boolean hasFixed32Value() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getFixed32Value() {
      return fixed32Value_;
    }
    
    // optional fixed64 fixed64_value = 17;
    public static final int FIXED64_VALUE_FIELD_NUMBER = 17;
    private long fixed64Value_;
    public boolean hasFixed64Value() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public long getFixed64Value() {
      return fixed64Value_;
    }
    
    // repeated string string_element = 18;
    public static final int STRING_ELEMENT_FIELD_NUMBER = 18;
    private com.google.protobuf.LazyStringList stringElement_;
    public java.util.List<String>
        getStringElementList() {
      return stringElement_;
    }
    public int getStringElementCount() {
      return stringElement_.size();
    }
    public String getStringElement(int index) {
      return stringElement_.get(index);
    }
    
    // repeated bool bool_element = 19;
    public static final int BOOL_ELEMENT_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Boolean> boolElement_;
    public java.util.List<java.lang.Boolean>
        getBoolElementList() {
      return boolElement_;
    }
    public int getBoolElementCount() {
      return boolElement_.size();
    }
    public boolean getBoolElement(int index) {
      return boolElement_.get(index);
    }
    
    // repeated bytes bytes_element = 20;
    public static final int BYTES_ELEMENT_FIELD_NUMBER = 20;
    private java.util.List<com.google.protobuf.ByteString> bytesElement_;
    public java.util.List<com.google.protobuf.ByteString>
        getBytesElementList() {
      return bytesElement_;
    }
    public int getBytesElementCount() {
      return bytesElement_.size();
    }
    public com.google.protobuf.ByteString getBytesElement(int index) {
      return bytesElement_.get(index);
    }
    
    // repeated double double_element = 21;
    public static final int DOUBLE_ELEMENT_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Double> doubleElement_;
    public java.util.List<java.lang.Double>
        getDoubleElementList() {
      return doubleElement_;
    }
    public int getDoubleElementCount() {
      return doubleElement_.size();
    }
    public double getDoubleElement(int index) {
      return doubleElement_.get(index);
    }
    
    // repeated float float_element = 22;
    public static final int FLOAT_ELEMENT_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Float> floatElement_;
    public java.util.List<java.lang.Float>
        getFloatElementList() {
      return floatElement_;
    }
    public int getFloatElementCount() {
      return floatElement_.size();
    }
    public float getFloatElement(int index) {
      return floatElement_.get(index);
    }
    
    // repeated int32 int32_element = 23;
    public static final int INT32_ELEMENT_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Integer> int32Element_;
    public java.util.List<java.lang.Integer>
        getInt32ElementList() {
      return int32Element_;
    }
    public int getInt32ElementCount() {
      return int32Element_.size();
    }
    public int getInt32Element(int index) {
      return int32Element_.get(index);
    }
    
    // repeated int64 int64_element = 24;
    public static final int INT64_ELEMENT_FIELD_NUMBER = 24;
    private java.util.List<java.lang.Long> int64Element_;
    public java.util.List<java.lang.Long>
        getInt64ElementList() {
      return int64Element_;
    }
    public int getInt64ElementCount() {
      return int64Element_.size();
    }
    public long getInt64Element(int index) {
      return int64Element_.get(index);
    }
    
    // repeated sint32 sint32_element = 25;
    public static final int SINT32_ELEMENT_FIELD_NUMBER = 25;
    private java.util.List<java.lang.Integer> sint32Element_;
    public java.util.List<java.lang.Integer>
        getSint32ElementList() {
      return sint32Element_;
    }
    public int getSint32ElementCount() {
      return sint32Element_.size();
    }
    public int getSint32Element(int index) {
      return sint32Element_.get(index);
    }
    
    // repeated sint64 sint64_element = 26;
    public static final int SINT64_ELEMENT_FIELD_NUMBER = 26;
    private java.util.List<java.lang.Long> sint64Element_;
    public java.util.List<java.lang.Long>
        getSint64ElementList() {
      return sint64Element_;
    }
    public int getSint64ElementCount() {
      return sint64Element_.size();
    }
    public long getSint64Element(int index) {
      return sint64Element_.get(index);
    }
    
    // repeated uint32 uint32_element = 27;
    public static final int UINT32_ELEMENT_FIELD_NUMBER = 27;
    private java.util.List<java.lang.Integer> uint32Element_;
    public java.util.List<java.lang.Integer>
        getUint32ElementList() {
      return uint32Element_;
    }
    public int getUint32ElementCount() {
      return uint32Element_.size();
    }
    public int getUint32Element(int index) {
      return uint32Element_.get(index);
    }
    
    // repeated uint64 uint64_element = 28;
    public static final int UINT64_ELEMENT_FIELD_NUMBER = 28;
    private java.util.List<java.lang.Long> uint64Element_;
    public java.util.List<java.lang.Long>
        getUint64ElementList() {
      return uint64Element_;
    }
    public int getUint64ElementCount() {
      return uint64Element_.size();
    }
    public long getUint64Element(int index) {
      return uint64Element_.get(index);
    }
    
    // repeated sfixed32 sfixed32_element = 29;
    public static final int SFIXED32_ELEMENT_FIELD_NUMBER = 29;
    private java.util.List<java.lang.Integer> sfixed32Element_;
    public java.util.List<java.lang.Integer>
        getSfixed32ElementList() {
      return sfixed32Element_;
    }
    public int getSfixed32ElementCount() {
      return sfixed32Element_.size();
    }
    public int getSfixed32Element(int index) {
      return sfixed32Element_.get(index);
    }
    
    // repeated sfixed64 sfixed64_element = 30;
    public static final int SFIXED64_ELEMENT_FIELD_NUMBER = 30;
    private java.util.List<java.lang.Long> sfixed64Element_;
    public java.util.List<java.lang.Long>
        getSfixed64ElementList() {
      return sfixed64Element_;
    }
    public int getSfixed64ElementCount() {
      return sfixed64Element_.size();
    }
    public long getSfixed64Element(int index) {
      return sfixed64Element_.get(index);
    }
    
    // repeated fixed32 fixed32_element = 31;
    public static final int FIXED32_ELEMENT_FIELD_NUMBER = 31;
    private java.util.List<java.lang.Integer> fixed32Element_;
    public java.util.List<java.lang.Integer>
        getFixed32ElementList() {
      return fixed32Element_;
    }
    public int getFixed32ElementCount() {
      return fixed32Element_.size();
    }
    public int getFixed32Element(int index) {
      return fixed32Element_.get(index);
    }
    
    // repeated fixed64 fixed64_element = 32;
    public static final int FIXED64_ELEMENT_FIELD_NUMBER = 32;
    private java.util.List<java.lang.Long> fixed64Element_;
    public java.util.List<java.lang.Long>
        getFixed64ElementList() {
      return fixed64Element_;
    }
    public int getFixed64ElementCount() {
      return fixed64Element_.size();
    }
    public long getFixed64Element(int index) {
      return fixed64Element_.get(index);
    }
    
    private void initFields() {
      propertyName_ = "";
      scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
      stringValue_ = "";
      boolValue_ = false;
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      doubleValue_ = 0D;
      floatValue_ = 0F;
      int32Value_ = 0;
      int64Value_ = 0L;
      sint32Value_ = 0;
      sint64Value_ = 0L;
      uint32Value_ = 0;
      uint64Value_ = 0L;
      sfixed32Value_ = 0;
      sfixed64Value_ = 0L;
      fixed32Value_ = 0;
      fixed64Value_ = 0L;
      stringElement_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      boolElement_ = java.util.Collections.emptyList();;
      bytesElement_ = java.util.Collections.emptyList();;
      doubleElement_ = java.util.Collections.emptyList();;
      floatElement_ = java.util.Collections.emptyList();;
      int32Element_ = java.util.Collections.emptyList();;
      int64Element_ = java.util.Collections.emptyList();;
      sint32Element_ = java.util.Collections.emptyList();;
      sint64Element_ = java.util.Collections.emptyList();;
      uint32Element_ = java.util.Collections.emptyList();;
      uint64Element_ = java.util.Collections.emptyList();;
      sfixed32Element_ = java.util.Collections.emptyList();;
      sfixed64Element_ = java.util.Collections.emptyList();;
      fixed32Element_ = java.util.Collections.emptyList();;
      fixed64Element_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPropertyNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, scalarType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getStringValueBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, boolValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, bytesValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, doubleValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, floatValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, int32Value_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, int64Value_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt32(10, sint32Value_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt64(11, sint64Value_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, uint32Value_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt64(13, uint64Value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeSFixed32(14, sfixed32Value_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeSFixed64(15, sfixed64Value_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFixed32(16, fixed32Value_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFixed64(17, fixed64Value_);
      }
      for (int i = 0; i < stringElement_.size(); i++) {
        output.writeBytes(18, stringElement_.getByteString(i));
      }
      for (int i = 0; i < boolElement_.size(); i++) {
        output.writeBool(19, boolElement_.get(i));
      }
      for (int i = 0; i < bytesElement_.size(); i++) {
        output.writeBytes(20, bytesElement_.get(i));
      }
      for (int i = 0; i < doubleElement_.size(); i++) {
        output.writeDouble(21, doubleElement_.get(i));
      }
      for (int i = 0; i < floatElement_.size(); i++) {
        output.writeFloat(22, floatElement_.get(i));
      }
      for (int i = 0; i < int32Element_.size(); i++) {
        output.writeInt32(23, int32Element_.get(i));
      }
      for (int i = 0; i < int64Element_.size(); i++) {
        output.writeInt64(24, int64Element_.get(i));
      }
      for (int i = 0; i < sint32Element_.size(); i++) {
        output.writeSInt32(25, sint32Element_.get(i));
      }
      for (int i = 0; i < sint64Element_.size(); i++) {
        output.writeSInt64(26, sint64Element_.get(i));
      }
      for (int i = 0; i < uint32Element_.size(); i++) {
        output.writeUInt32(27, uint32Element_.get(i));
      }
      for (int i = 0; i < uint64Element_.size(); i++) {
        output.writeUInt64(28, uint64Element_.get(i));
      }
      for (int i = 0; i < sfixed32Element_.size(); i++) {
        output.writeSFixed32(29, sfixed32Element_.get(i));
      }
      for (int i = 0; i < sfixed64Element_.size(); i++) {
        output.writeSFixed64(30, sfixed64Element_.get(i));
      }
      for (int i = 0; i < fixed32Element_.size(); i++) {
        output.writeFixed32(31, fixed32Element_.get(i));
      }
      for (int i = 0; i < fixed64Element_.size(); i++) {
        output.writeFixed64(32, fixed64Element_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPropertyNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, scalarType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getStringValueBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, boolValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, bytesValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, doubleValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, floatValue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, int32Value_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, int64Value_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, sint32Value_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(11, sint64Value_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, uint32Value_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, uint64Value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(14, sfixed32Value_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(15, sfixed64Value_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(16, fixed32Value_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(17, fixed64Value_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringElement_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringElement_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStringElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolElementList().size();
        size += dataSize;
        size += 2 * getBoolElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytesElement_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytesElement_.get(i));
        }
        size += dataSize;
        size += 2 * getBytesElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleElementList().size();
        size += dataSize;
        size += 2 * getDoubleElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatElementList().size();
        size += dataSize;
        size += 2 * getFloatElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Element_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Element_.get(i));
        }
        size += dataSize;
        size += 2 * getInt32ElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Element_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Element_.get(i));
        }
        size += dataSize;
        size += 2 * getInt64ElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32Element_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32Element_.get(i));
        }
        size += dataSize;
        size += 2 * getSint32ElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64Element_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64Element_.get(i));
        }
        size += dataSize;
        size += 2 * getSint64ElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32Element_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32Element_.get(i));
        }
        size += dataSize;
        size += 2 * getUint32ElementList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Element_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Element_.get(i));
        }
        size += dataSize;
        size += 2 * getUint64ElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32ElementList().size();
        size += dataSize;
        size += 2 * getSfixed32ElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64ElementList().size();
        size += dataSize;
        size += 2 * getSfixed64ElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32ElementList().size();
        size += dataSize;
        size += 2 * getFixed32ElementList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64ElementList().size();
        size += dataSize;
        size += 2 * getFixed64ElementList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericProperty_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericProperty_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        propertyName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
        bitField0_ = (bitField0_ & ~0x00000002);
        stringValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        boolValue_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        doubleValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        floatValue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        int32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        int64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        sint32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        sint64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        uint32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        uint64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        sfixed32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        sfixed64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        fixed32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        fixed64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        stringElement_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00020000);
        boolElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00040000);
        bytesElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00080000);
        doubleElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00100000);
        floatElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00200000);
        int32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00400000);
        int64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00800000);
        sint32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x01000000);
        sint64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x02000000);
        uint32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x04000000);
        uint64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x08000000);
        sfixed32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x10000000);
        sfixed64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x20000000);
        fixed32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x40000000);
        fixed64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.propertyName_ = propertyName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scalarType_ = scalarType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stringValue_ = stringValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.boolValue_ = boolValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bytesValue_ = bytesValue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.doubleValue_ = doubleValue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.floatValue_ = floatValue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.int32Value_ = int32Value_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.int64Value_ = int64Value_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sint32Value_ = sint32Value_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sint64Value_ = sint64Value_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.uint32Value_ = uint32Value_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.uint64Value_ = uint64Value_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.sfixed32Value_ = sfixed32Value_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.sfixed64Value_ = sfixed64Value_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fixed32Value_ = fixed32Value_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.fixed64Value_ = fixed64Value_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          stringElement_ = new com.google.protobuf.UnmodifiableLazyStringList(
              stringElement_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.stringElement_ = stringElement_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          boolElement_ = java.util.Collections.unmodifiableList(boolElement_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.boolElement_ = boolElement_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          bytesElement_ = java.util.Collections.unmodifiableList(bytesElement_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.bytesElement_ = bytesElement_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          doubleElement_ = java.util.Collections.unmodifiableList(doubleElement_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.doubleElement_ = doubleElement_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          floatElement_ = java.util.Collections.unmodifiableList(floatElement_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.floatElement_ = floatElement_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          int32Element_ = java.util.Collections.unmodifiableList(int32Element_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.int32Element_ = int32Element_;
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          int64Element_ = java.util.Collections.unmodifiableList(int64Element_);
          bitField0_ = (bitField0_ & ~0x00800000);
        }
        result.int64Element_ = int64Element_;
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          sint32Element_ = java.util.Collections.unmodifiableList(sint32Element_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.sint32Element_ = sint32Element_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          sint64Element_ = java.util.Collections.unmodifiableList(sint64Element_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.sint64Element_ = sint64Element_;
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          uint32Element_ = java.util.Collections.unmodifiableList(uint32Element_);
          bitField0_ = (bitField0_ & ~0x04000000);
        }
        result.uint32Element_ = uint32Element_;
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          uint64Element_ = java.util.Collections.unmodifiableList(uint64Element_);
          bitField0_ = (bitField0_ & ~0x08000000);
        }
        result.uint64Element_ = uint64Element_;
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          sfixed32Element_ = java.util.Collections.unmodifiableList(sfixed32Element_);
          bitField0_ = (bitField0_ & ~0x10000000);
        }
        result.sfixed32Element_ = sfixed32Element_;
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          sfixed64Element_ = java.util.Collections.unmodifiableList(sfixed64Element_);
          bitField0_ = (bitField0_ & ~0x20000000);
        }
        result.sfixed64Element_ = sfixed64Element_;
        if (((bitField0_ & 0x40000000) == 0x40000000)) {
          fixed32Element_ = java.util.Collections.unmodifiableList(fixed32Element_);
          bitField0_ = (bitField0_ & ~0x40000000);
        }
        result.fixed32Element_ = fixed32Element_;
        if (((bitField0_ & 0x80000000) == 0x80000000)) {
          fixed64Element_ = java.util.Collections.unmodifiableList(fixed64Element_);
          bitField0_ = (bitField0_ & ~0x80000000);
        }
        result.fixed64Element_ = fixed64Element_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.getDefaultInstance()) return this;
        if (other.hasPropertyName()) {
          setPropertyName(other.getPropertyName());
        }
        if (other.hasScalarType()) {
          setScalarType(other.getScalarType());
        }
        if (other.hasStringValue()) {
          setStringValue(other.getStringValue());
        }
        if (other.hasBoolValue()) {
          setBoolValue(other.getBoolValue());
        }
        if (other.hasBytesValue()) {
          setBytesValue(other.getBytesValue());
        }
        if (other.hasDoubleValue()) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.hasFloatValue()) {
          setFloatValue(other.getFloatValue());
        }
        if (other.hasInt32Value()) {
          setInt32Value(other.getInt32Value());
        }
        if (other.hasInt64Value()) {
          setInt64Value(other.getInt64Value());
        }
        if (other.hasSint32Value()) {
          setSint32Value(other.getSint32Value());
        }
        if (other.hasSint64Value()) {
          setSint64Value(other.getSint64Value());
        }
        if (other.hasUint32Value()) {
          setUint32Value(other.getUint32Value());
        }
        if (other.hasUint64Value()) {
          setUint64Value(other.getUint64Value());
        }
        if (other.hasSfixed32Value()) {
          setSfixed32Value(other.getSfixed32Value());
        }
        if (other.hasSfixed64Value()) {
          setSfixed64Value(other.getSfixed64Value());
        }
        if (other.hasFixed32Value()) {
          setFixed32Value(other.getFixed32Value());
        }
        if (other.hasFixed64Value()) {
          setFixed64Value(other.getFixed64Value());
        }
        if (!other.stringElement_.isEmpty()) {
          if (stringElement_.isEmpty()) {
            stringElement_ = other.stringElement_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureStringElementIsMutable();
            stringElement_.addAll(other.stringElement_);
          }
          onChanged();
        }
        if (!other.boolElement_.isEmpty()) {
          if (boolElement_.isEmpty()) {
            boolElement_ = other.boolElement_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureBoolElementIsMutable();
            boolElement_.addAll(other.boolElement_);
          }
          onChanged();
        }
        if (!other.bytesElement_.isEmpty()) {
          if (bytesElement_.isEmpty()) {
            bytesElement_ = other.bytesElement_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureBytesElementIsMutable();
            bytesElement_.addAll(other.bytesElement_);
          }
          onChanged();
        }
        if (!other.doubleElement_.isEmpty()) {
          if (doubleElement_.isEmpty()) {
            doubleElement_ = other.doubleElement_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureDoubleElementIsMutable();
            doubleElement_.addAll(other.doubleElement_);
          }
          onChanged();
        }
        if (!other.floatElement_.isEmpty()) {
          if (floatElement_.isEmpty()) {
            floatElement_ = other.floatElement_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureFloatElementIsMutable();
            floatElement_.addAll(other.floatElement_);
          }
          onChanged();
        }
        if (!other.int32Element_.isEmpty()) {
          if (int32Element_.isEmpty()) {
            int32Element_ = other.int32Element_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureInt32ElementIsMutable();
            int32Element_.addAll(other.int32Element_);
          }
          onChanged();
        }
        if (!other.int64Element_.isEmpty()) {
          if (int64Element_.isEmpty()) {
            int64Element_ = other.int64Element_;
            bitField0_ = (bitField0_ & ~0x00800000);
          } else {
            ensureInt64ElementIsMutable();
            int64Element_.addAll(other.int64Element_);
          }
          onChanged();
        }
        if (!other.sint32Element_.isEmpty()) {
          if (sint32Element_.isEmpty()) {
            sint32Element_ = other.sint32Element_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureSint32ElementIsMutable();
            sint32Element_.addAll(other.sint32Element_);
          }
          onChanged();
        }
        if (!other.sint64Element_.isEmpty()) {
          if (sint64Element_.isEmpty()) {
            sint64Element_ = other.sint64Element_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureSint64ElementIsMutable();
            sint64Element_.addAll(other.sint64Element_);
          }
          onChanged();
        }
        if (!other.uint32Element_.isEmpty()) {
          if (uint32Element_.isEmpty()) {
            uint32Element_ = other.uint32Element_;
            bitField0_ = (bitField0_ & ~0x04000000);
          } else {
            ensureUint32ElementIsMutable();
            uint32Element_.addAll(other.uint32Element_);
          }
          onChanged();
        }
        if (!other.uint64Element_.isEmpty()) {
          if (uint64Element_.isEmpty()) {
            uint64Element_ = other.uint64Element_;
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ensureUint64ElementIsMutable();
            uint64Element_.addAll(other.uint64Element_);
          }
          onChanged();
        }
        if (!other.sfixed32Element_.isEmpty()) {
          if (sfixed32Element_.isEmpty()) {
            sfixed32Element_ = other.sfixed32Element_;
            bitField0_ = (bitField0_ & ~0x10000000);
          } else {
            ensureSfixed32ElementIsMutable();
            sfixed32Element_.addAll(other.sfixed32Element_);
          }
          onChanged();
        }
        if (!other.sfixed64Element_.isEmpty()) {
          if (sfixed64Element_.isEmpty()) {
            sfixed64Element_ = other.sfixed64Element_;
            bitField0_ = (bitField0_ & ~0x20000000);
          } else {
            ensureSfixed64ElementIsMutable();
            sfixed64Element_.addAll(other.sfixed64Element_);
          }
          onChanged();
        }
        if (!other.fixed32Element_.isEmpty()) {
          if (fixed32Element_.isEmpty()) {
            fixed32Element_ = other.fixed32Element_;
            bitField0_ = (bitField0_ & ~0x40000000);
          } else {
            ensureFixed32ElementIsMutable();
            fixed32Element_.addAll(other.fixed32Element_);
          }
          onChanged();
        }
        if (!other.fixed64Element_.isEmpty()) {
          if (fixed64Element_.isEmpty()) {
            fixed64Element_ = other.fixed64Element_;
            bitField0_ = (bitField0_ & ~0x80000000);
          } else {
            ensureFixed64ElementIsMutable();
            fixed64Element_.addAll(other.fixed64Element_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              propertyName_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType value = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                scalarType_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              stringValue_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              boolValue_ = input.readBool();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              bytesValue_ = input.readBytes();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              doubleValue_ = input.readDouble();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              floatValue_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              int32Value_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              int64Value_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              sint32Value_ = input.readSInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              sint64Value_ = input.readSInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              uint32Value_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              uint64Value_ = input.readUInt64();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              sfixed32Value_ = input.readSFixed32();
              break;
            }
            case 121: {
              bitField0_ |= 0x00004000;
              sfixed64Value_ = input.readSFixed64();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              fixed32Value_ = input.readFixed32();
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              fixed64Value_ = input.readFixed64();
              break;
            }
            case 146: {
              ensureStringElementIsMutable();
              stringElement_.add(input.readBytes());
              break;
            }
            case 152: {
              ensureBoolElementIsMutable();
              boolElement_.add(input.readBool());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addBoolElement(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 162: {
              ensureBytesElementIsMutable();
              bytesElement_.add(input.readBytes());
              break;
            }
            case 169: {
              ensureDoubleElementIsMutable();
              doubleElement_.add(input.readDouble());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDoubleElement(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 181: {
              ensureFloatElementIsMutable();
              floatElement_.add(input.readFloat());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFloatElement(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 184: {
              ensureInt32ElementIsMutable();
              int32Element_.add(input.readInt32());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInt32Element(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 192: {
              ensureInt64ElementIsMutable();
              int64Element_.add(input.readInt64());
              break;
            }
            case 194: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInt64Element(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 200: {
              ensureSint32ElementIsMutable();
              sint32Element_.add(input.readSInt32());
              break;
            }
            case 202: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSint32Element(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 208: {
              ensureSint64ElementIsMutable();
              sint64Element_.add(input.readSInt64());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSint64Element(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 216: {
              ensureUint32ElementIsMutable();
              uint32Element_.add(input.readUInt32());
              break;
            }
            case 218: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUint32Element(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 224: {
              ensureUint64ElementIsMutable();
              uint64Element_.add(input.readUInt64());
              break;
            }
            case 226: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUint64Element(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 237: {
              ensureSfixed32ElementIsMutable();
              sfixed32Element_.add(input.readSFixed32());
              break;
            }
            case 234: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSfixed32Element(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 241: {
              ensureSfixed64ElementIsMutable();
              sfixed64Element_.add(input.readSFixed64());
              break;
            }
            case 242: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSfixed64Element(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 253: {
              ensureFixed32ElementIsMutable();
              fixed32Element_.add(input.readFixed32());
              break;
            }
            case 250: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFixed32Element(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 257: {
              ensureFixed64ElementIsMutable();
              fixed64Element_.add(input.readFixed64());
              break;
            }
            case 258: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFixed64Element(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string property_name = 1;
      private java.lang.Object propertyName_ = "";
      public boolean hasPropertyName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPropertyName() {
        java.lang.Object ref = propertyName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          propertyName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPropertyName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        propertyName_ = value;
        onChanged();
        return this;
      }
      public Builder clearPropertyName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        propertyName_ = getDefaultInstance().getPropertyName();
        onChanged();
        return this;
      }
      void setPropertyName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        propertyName_ = value;
        onChanged();
      }
      
      // optional .ProtocolBufferScalarType scalar_type = 2;
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
      public boolean hasScalarType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType getScalarType() {
        return scalarType_;
      }
      public Builder setScalarType(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        scalarType_ = value;
        onChanged();
        return this;
      }
      public Builder clearScalarType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
        onChanged();
        return this;
      }
      
      // optional string string_value = 3;
      private java.lang.Object stringValue_ = "";
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          stringValue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStringValue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        stringValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearStringValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stringValue_ = getDefaultInstance().getStringValue();
        onChanged();
        return this;
      }
      void setStringValue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        stringValue_ = value;
        onChanged();
      }
      
      // optional bool bool_value = 4;
      private boolean boolValue_ ;
      public boolean hasBoolValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getBoolValue() {
        return boolValue_;
      }
      public Builder setBoolValue(boolean value) {
        bitField0_ |= 0x00000008;
        boolValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearBoolValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        boolValue_ = false;
        onChanged();
        return this;
      }
      
      // optional bytes bytes_value = 5;
      private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasBytesValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }
      public Builder setBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        bytesValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearBytesValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bytesValue_ = getDefaultInstance().getBytesValue();
        onChanged();
        return this;
      }
      
      // optional double double_value = 6;
      private double doubleValue_ ;
      public boolean hasDoubleValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getDoubleValue() {
        return doubleValue_;
      }
      public Builder setDoubleValue(double value) {
        bitField0_ |= 0x00000020;
        doubleValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearDoubleValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        doubleValue_ = 0D;
        onChanged();
        return this;
      }
      
      // optional float float_value = 7;
      private float floatValue_ ;
      public boolean hasFloatValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getFloatValue() {
        return floatValue_;
      }
      public Builder setFloatValue(float value) {
        bitField0_ |= 0x00000040;
        floatValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearFloatValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        floatValue_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 int32_value = 8;
      private int int32Value_ ;
      public boolean hasInt32Value() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getInt32Value() {
        return int32Value_;
      }
      public Builder setInt32Value(int value) {
        bitField0_ |= 0x00000080;
        int32Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearInt32Value() {
        bitField0_ = (bitField0_ & ~0x00000080);
        int32Value_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 int64_value = 9;
      private long int64Value_ ;
      public boolean hasInt64Value() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public long getInt64Value() {
        return int64Value_;
      }
      public Builder setInt64Value(long value) {
        bitField0_ |= 0x00000100;
        int64Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearInt64Value() {
        bitField0_ = (bitField0_ & ~0x00000100);
        int64Value_ = 0L;
        onChanged();
        return this;
      }
      
      // optional sint32 sint32_value = 10;
      private int sint32Value_ ;
      public boolean hasSint32Value() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getSint32Value() {
        return sint32Value_;
      }
      public Builder setSint32Value(int value) {
        bitField0_ |= 0x00000200;
        sint32Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearSint32Value() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sint32Value_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint64 sint64_value = 11;
      private long sint64Value_ ;
      public boolean hasSint64Value() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public long getSint64Value() {
        return sint64Value_;
      }
      public Builder setSint64Value(long value) {
        bitField0_ |= 0x00000400;
        sint64Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearSint64Value() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sint64Value_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint32 uint32_value = 12;
      private int uint32Value_ ;
      public boolean hasUint32Value() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getUint32Value() {
        return uint32Value_;
      }
      public Builder setUint32Value(int value) {
        bitField0_ |= 0x00000800;
        uint32Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearUint32Value() {
        bitField0_ = (bitField0_ & ~0x00000800);
        uint32Value_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 uint64_value = 13;
      private long uint64Value_ ;
      public boolean hasUint64Value() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public long getUint64Value() {
        return uint64Value_;
      }
      public Builder setUint64Value(long value) {
        bitField0_ |= 0x00001000;
        uint64Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearUint64Value() {
        bitField0_ = (bitField0_ & ~0x00001000);
        uint64Value_ = 0L;
        onChanged();
        return this;
      }
      
      // optional sfixed32 sfixed32_value = 14;
      private int sfixed32Value_ ;
      public boolean hasSfixed32Value() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getSfixed32Value() {
        return sfixed32Value_;
      }
      public Builder setSfixed32Value(int value) {
        bitField0_ |= 0x00002000;
        sfixed32Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearSfixed32Value() {
        bitField0_ = (bitField0_ & ~0x00002000);
        sfixed32Value_ = 0;
        onChanged();
        return this;
      }
      
      // optional sfixed64 sfixed64_value = 15;
      private long sfixed64Value_ ;
      public boolean hasSfixed64Value() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public long getSfixed64Value() {
        return sfixed64Value_;
      }
      public Builder setSfixed64Value(long value) {
        bitField0_ |= 0x00004000;
        sfixed64Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearSfixed64Value() {
        bitField0_ = (bitField0_ & ~0x00004000);
        sfixed64Value_ = 0L;
        onChanged();
        return this;
      }
      
      // optional fixed32 fixed32_value = 16;
      private int fixed32Value_ ;
      public boolean hasFixed32Value() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getFixed32Value() {
        return fixed32Value_;
      }
      public Builder setFixed32Value(int value) {
        bitField0_ |= 0x00008000;
        fixed32Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixed32Value() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fixed32Value_ = 0;
        onChanged();
        return this;
      }
      
      // optional fixed64 fixed64_value = 17;
      private long fixed64Value_ ;
      public boolean hasFixed64Value() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public long getFixed64Value() {
        return fixed64Value_;
      }
      public Builder setFixed64Value(long value) {
        bitField0_ |= 0x00010000;
        fixed64Value_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixed64Value() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fixed64Value_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated string string_element = 18;
      private com.google.protobuf.LazyStringList stringElement_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringElementIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          stringElement_ = new com.google.protobuf.LazyStringArrayList(stringElement_);
          bitField0_ |= 0x00020000;
         }
      }
      public java.util.List<String>
          getStringElementList() {
        return java.util.Collections.unmodifiableList(stringElement_);
      }
      public int getStringElementCount() {
        return stringElement_.size();
      }
      public String getStringElement(int index) {
        return stringElement_.get(index);
      }
      public Builder setStringElement(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringElementIsMutable();
        stringElement_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addStringElement(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringElementIsMutable();
        stringElement_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllStringElement(
          java.lang.Iterable<String> values) {
        ensureStringElementIsMutable();
        super.addAll(values, stringElement_);
        onChanged();
        return this;
      }
      public Builder clearStringElement() {
        stringElement_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      void addStringElement(com.google.protobuf.ByteString value) {
        ensureStringElementIsMutable();
        stringElement_.add(value);
        onChanged();
      }
      
      // repeated bool bool_element = 19;
      private java.util.List<java.lang.Boolean> boolElement_ = java.util.Collections.emptyList();;
      private void ensureBoolElementIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          boolElement_ = new java.util.ArrayList<java.lang.Boolean>(boolElement_);
          bitField0_ |= 0x00040000;
         }
      }
      public java.util.List<java.lang.Boolean>
          getBoolElementList() {
        return java.util.Collections.unmodifiableList(boolElement_);
      }
      public int getBoolElementCount() {
        return boolElement_.size();
      }
      public boolean getBoolElement(int index) {
        return boolElement_.get(index);
      }
      public Builder setBoolElement(
          int index, boolean value) {
        ensureBoolElementIsMutable();
        boolElement_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBoolElement(boolean value) {
        ensureBoolElementIsMutable();
        boolElement_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBoolElement(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolElementIsMutable();
        super.addAll(values, boolElement_);
        onChanged();
        return this;
      }
      public Builder clearBoolElement() {
        boolElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }
      
      // repeated bytes bytes_element = 20;
      private java.util.List<com.google.protobuf.ByteString> bytesElement_ = java.util.Collections.emptyList();;
      private void ensureBytesElementIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          bytesElement_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesElement_);
          bitField0_ |= 0x00080000;
         }
      }
      public java.util.List<com.google.protobuf.ByteString>
          getBytesElementList() {
        return java.util.Collections.unmodifiableList(bytesElement_);
      }
      public int getBytesElementCount() {
        return bytesElement_.size();
      }
      public com.google.protobuf.ByteString getBytesElement(int index) {
        return bytesElement_.get(index);
      }
      public Builder setBytesElement(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesElementIsMutable();
        bytesElement_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBytesElement(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesElementIsMutable();
        bytesElement_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBytesElement(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesElementIsMutable();
        super.addAll(values, bytesElement_);
        onChanged();
        return this;
      }
      public Builder clearBytesElement() {
        bytesElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }
      
      // repeated double double_element = 21;
      private java.util.List<java.lang.Double> doubleElement_ = java.util.Collections.emptyList();;
      private void ensureDoubleElementIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          doubleElement_ = new java.util.ArrayList<java.lang.Double>(doubleElement_);
          bitField0_ |= 0x00100000;
         }
      }
      public java.util.List<java.lang.Double>
          getDoubleElementList() {
        return java.util.Collections.unmodifiableList(doubleElement_);
      }
      public int getDoubleElementCount() {
        return doubleElement_.size();
      }
      public double getDoubleElement(int index) {
        return doubleElement_.get(index);
      }
      public Builder setDoubleElement(
          int index, double value) {
        ensureDoubleElementIsMutable();
        doubleElement_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDoubleElement(double value) {
        ensureDoubleElementIsMutable();
        doubleElement_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDoubleElement(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleElementIsMutable();
        super.addAll(values, doubleElement_);
        onChanged();
        return this;
      }
      public Builder clearDoubleElement() {
        doubleElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }
      
      // repeated float float_element = 22;
      private java.util.List<java.lang.Float> floatElement_ = java.util.Collections.emptyList();;
      private void ensureFloatElementIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          floatElement_ = new java.util.ArrayList<java.lang.Float>(floatElement_);
          bitField0_ |= 0x00200000;
         }
      }
      public java.util.List<java.lang.Float>
          getFloatElementList() {
        return java.util.Collections.unmodifiableList(floatElement_);
      }
      public int getFloatElementCount() {
        return floatElement_.size();
      }
      public float getFloatElement(int index) {
        return floatElement_.get(index);
      }
      public Builder setFloatElement(
          int index, float value) {
        ensureFloatElementIsMutable();
        floatElement_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFloatElement(float value) {
        ensureFloatElementIsMutable();
        floatElement_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFloatElement(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatElementIsMutable();
        super.addAll(values, floatElement_);
        onChanged();
        return this;
      }
      public Builder clearFloatElement() {
        floatElement_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }
      
      // repeated int32 int32_element = 23;
      private java.util.List<java.lang.Integer> int32Element_ = java.util.Collections.emptyList();;
      private void ensureInt32ElementIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          int32Element_ = new java.util.ArrayList<java.lang.Integer>(int32Element_);
          bitField0_ |= 0x00400000;
         }
      }
      public java.util.List<java.lang.Integer>
          getInt32ElementList() {
        return java.util.Collections.unmodifiableList(int32Element_);
      }
      public int getInt32ElementCount() {
        return int32Element_.size();
      }
      public int getInt32Element(int index) {
        return int32Element_.get(index);
      }
      public Builder setInt32Element(
          int index, int value) {
        ensureInt32ElementIsMutable();
        int32Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInt32Element(int value) {
        ensureInt32ElementIsMutable();
        int32Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInt32Element(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32ElementIsMutable();
        super.addAll(values, int32Element_);
        onChanged();
        return this;
      }
      public Builder clearInt32Element() {
        int32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }
      
      // repeated int64 int64_element = 24;
      private java.util.List<java.lang.Long> int64Element_ = java.util.Collections.emptyList();;
      private void ensureInt64ElementIsMutable() {
        if (!((bitField0_ & 0x00800000) == 0x00800000)) {
          int64Element_ = new java.util.ArrayList<java.lang.Long>(int64Element_);
          bitField0_ |= 0x00800000;
         }
      }
      public java.util.List<java.lang.Long>
          getInt64ElementList() {
        return java.util.Collections.unmodifiableList(int64Element_);
      }
      public int getInt64ElementCount() {
        return int64Element_.size();
      }
      public long getInt64Element(int index) {
        return int64Element_.get(index);
      }
      public Builder setInt64Element(
          int index, long value) {
        ensureInt64ElementIsMutable();
        int64Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInt64Element(long value) {
        ensureInt64ElementIsMutable();
        int64Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInt64Element(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64ElementIsMutable();
        super.addAll(values, int64Element_);
        onChanged();
        return this;
      }
      public Builder clearInt64Element() {
        int64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
        return this;
      }
      
      // repeated sint32 sint32_element = 25;
      private java.util.List<java.lang.Integer> sint32Element_ = java.util.Collections.emptyList();;
      private void ensureSint32ElementIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          sint32Element_ = new java.util.ArrayList<java.lang.Integer>(sint32Element_);
          bitField0_ |= 0x01000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getSint32ElementList() {
        return java.util.Collections.unmodifiableList(sint32Element_);
      }
      public int getSint32ElementCount() {
        return sint32Element_.size();
      }
      public int getSint32Element(int index) {
        return sint32Element_.get(index);
      }
      public Builder setSint32Element(
          int index, int value) {
        ensureSint32ElementIsMutable();
        sint32Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSint32Element(int value) {
        ensureSint32ElementIsMutable();
        sint32Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSint32Element(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32ElementIsMutable();
        super.addAll(values, sint32Element_);
        onChanged();
        return this;
      }
      public Builder clearSint32Element() {
        sint32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }
      
      // repeated sint64 sint64_element = 26;
      private java.util.List<java.lang.Long> sint64Element_ = java.util.Collections.emptyList();;
      private void ensureSint64ElementIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          sint64Element_ = new java.util.ArrayList<java.lang.Long>(sint64Element_);
          bitField0_ |= 0x02000000;
         }
      }
      public java.util.List<java.lang.Long>
          getSint64ElementList() {
        return java.util.Collections.unmodifiableList(sint64Element_);
      }
      public int getSint64ElementCount() {
        return sint64Element_.size();
      }
      public long getSint64Element(int index) {
        return sint64Element_.get(index);
      }
      public Builder setSint64Element(
          int index, long value) {
        ensureSint64ElementIsMutable();
        sint64Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSint64Element(long value) {
        ensureSint64ElementIsMutable();
        sint64Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSint64Element(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64ElementIsMutable();
        super.addAll(values, sint64Element_);
        onChanged();
        return this;
      }
      public Builder clearSint64Element() {
        sint64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }
      
      // repeated uint32 uint32_element = 27;
      private java.util.List<java.lang.Integer> uint32Element_ = java.util.Collections.emptyList();;
      private void ensureUint32ElementIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          uint32Element_ = new java.util.ArrayList<java.lang.Integer>(uint32Element_);
          bitField0_ |= 0x04000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getUint32ElementList() {
        return java.util.Collections.unmodifiableList(uint32Element_);
      }
      public int getUint32ElementCount() {
        return uint32Element_.size();
      }
      public int getUint32Element(int index) {
        return uint32Element_.get(index);
      }
      public Builder setUint32Element(
          int index, int value) {
        ensureUint32ElementIsMutable();
        uint32Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUint32Element(int value) {
        ensureUint32ElementIsMutable();
        uint32Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUint32Element(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32ElementIsMutable();
        super.addAll(values, uint32Element_);
        onChanged();
        return this;
      }
      public Builder clearUint32Element() {
        uint32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x04000000);
        onChanged();
        return this;
      }
      
      // repeated uint64 uint64_element = 28;
      private java.util.List<java.lang.Long> uint64Element_ = java.util.Collections.emptyList();;
      private void ensureUint64ElementIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          uint64Element_ = new java.util.ArrayList<java.lang.Long>(uint64Element_);
          bitField0_ |= 0x08000000;
         }
      }
      public java.util.List<java.lang.Long>
          getUint64ElementList() {
        return java.util.Collections.unmodifiableList(uint64Element_);
      }
      public int getUint64ElementCount() {
        return uint64Element_.size();
      }
      public long getUint64Element(int index) {
        return uint64Element_.get(index);
      }
      public Builder setUint64Element(
          int index, long value) {
        ensureUint64ElementIsMutable();
        uint64Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUint64Element(long value) {
        ensureUint64ElementIsMutable();
        uint64Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUint64Element(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64ElementIsMutable();
        super.addAll(values, uint64Element_);
        onChanged();
        return this;
      }
      public Builder clearUint64Element() {
        uint64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x08000000);
        onChanged();
        return this;
      }
      
      // repeated sfixed32 sfixed32_element = 29;
      private java.util.List<java.lang.Integer> sfixed32Element_ = java.util.Collections.emptyList();;
      private void ensureSfixed32ElementIsMutable() {
        if (!((bitField0_ & 0x10000000) == 0x10000000)) {
          sfixed32Element_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Element_);
          bitField0_ |= 0x10000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getSfixed32ElementList() {
        return java.util.Collections.unmodifiableList(sfixed32Element_);
      }
      public int getSfixed32ElementCount() {
        return sfixed32Element_.size();
      }
      public int getSfixed32Element(int index) {
        return sfixed32Element_.get(index);
      }
      public Builder setSfixed32Element(
          int index, int value) {
        ensureSfixed32ElementIsMutable();
        sfixed32Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSfixed32Element(int value) {
        ensureSfixed32ElementIsMutable();
        sfixed32Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSfixed32Element(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32ElementIsMutable();
        super.addAll(values, sfixed32Element_);
        onChanged();
        return this;
      }
      public Builder clearSfixed32Element() {
        sfixed32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x10000000);
        onChanged();
        return this;
      }
      
      // repeated sfixed64 sfixed64_element = 30;
      private java.util.List<java.lang.Long> sfixed64Element_ = java.util.Collections.emptyList();;
      private void ensureSfixed64ElementIsMutable() {
        if (!((bitField0_ & 0x20000000) == 0x20000000)) {
          sfixed64Element_ = new java.util.ArrayList<java.lang.Long>(sfixed64Element_);
          bitField0_ |= 0x20000000;
         }
      }
      public java.util.List<java.lang.Long>
          getSfixed64ElementList() {
        return java.util.Collections.unmodifiableList(sfixed64Element_);
      }
      public int getSfixed64ElementCount() {
        return sfixed64Element_.size();
      }
      public long getSfixed64Element(int index) {
        return sfixed64Element_.get(index);
      }
      public Builder setSfixed64Element(
          int index, long value) {
        ensureSfixed64ElementIsMutable();
        sfixed64Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSfixed64Element(long value) {
        ensureSfixed64ElementIsMutable();
        sfixed64Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSfixed64Element(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64ElementIsMutable();
        super.addAll(values, sfixed64Element_);
        onChanged();
        return this;
      }
      public Builder clearSfixed64Element() {
        sfixed64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x20000000);
        onChanged();
        return this;
      }
      
      // repeated fixed32 fixed32_element = 31;
      private java.util.List<java.lang.Integer> fixed32Element_ = java.util.Collections.emptyList();;
      private void ensureFixed32ElementIsMutable() {
        if (!((bitField0_ & 0x40000000) == 0x40000000)) {
          fixed32Element_ = new java.util.ArrayList<java.lang.Integer>(fixed32Element_);
          bitField0_ |= 0x40000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getFixed32ElementList() {
        return java.util.Collections.unmodifiableList(fixed32Element_);
      }
      public int getFixed32ElementCount() {
        return fixed32Element_.size();
      }
      public int getFixed32Element(int index) {
        return fixed32Element_.get(index);
      }
      public Builder setFixed32Element(
          int index, int value) {
        ensureFixed32ElementIsMutable();
        fixed32Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFixed32Element(int value) {
        ensureFixed32ElementIsMutable();
        fixed32Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFixed32Element(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32ElementIsMutable();
        super.addAll(values, fixed32Element_);
        onChanged();
        return this;
      }
      public Builder clearFixed32Element() {
        fixed32Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x40000000);
        onChanged();
        return this;
      }
      
      // repeated fixed64 fixed64_element = 32;
      private java.util.List<java.lang.Long> fixed64Element_ = java.util.Collections.emptyList();;
      private void ensureFixed64ElementIsMutable() {
        if (!((bitField0_ & 0x80000000) == 0x80000000)) {
          fixed64Element_ = new java.util.ArrayList<java.lang.Long>(fixed64Element_);
          bitField0_ |= 0x80000000;
         }
      }
      public java.util.List<java.lang.Long>
          getFixed64ElementList() {
        return java.util.Collections.unmodifiableList(fixed64Element_);
      }
      public int getFixed64ElementCount() {
        return fixed64Element_.size();
      }
      public long getFixed64Element(int index) {
        return fixed64Element_.get(index);
      }
      public Builder setFixed64Element(
          int index, long value) {
        ensureFixed64ElementIsMutable();
        fixed64Element_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFixed64Element(long value) {
        ensureFixed64ElementIsMutable();
        fixed64Element_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFixed64Element(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64ElementIsMutable();
        super.addAll(values, fixed64Element_);
        onChanged();
        return this;
      }
      public Builder clearFixed64Element() {
        fixed64Element_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x80000000);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:GenericProperty)
    }
    
    static {
      defaultInstance = new GenericProperty(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GenericProperty)
  }
  
  public interface Time_PBOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 hours = 1 [default = 0];
    boolean hasHours();
    int getHours();
    
    // optional int32 minutes = 2 [default = 0];
    boolean hasMinutes();
    int getMinutes();
    
    // optional int32 seconds = 3 [default = 0];
    boolean hasSeconds();
    int getSeconds();
    
    // optional int32 utc_offset = 4 [default = 0];
    boolean hasUtcOffset();
    int getUtcOffset();
  }
  public static final class Time_PB extends
      com.google.protobuf.GeneratedMessage
      implements Time_PBOrBuilder {
    // Use Time_PB.newBuilder() to construct.
    private Time_PB(Builder builder) {
      super(builder);
    }
    private Time_PB(boolean noInit) {}
    
    private static final Time_PB defaultInstance;
    public static Time_PB getDefaultInstance() {
      return defaultInstance;
    }
    
    public Time_PB getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Time_PB_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Time_PB_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 hours = 1 [default = 0];
    public static final int HOURS_FIELD_NUMBER = 1;
    private int hours_;
    public boolean hasHours() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getHours() {
      return hours_;
    }
    
    // optional int32 minutes = 2 [default = 0];
    public static final int MINUTES_FIELD_NUMBER = 2;
    private int minutes_;
    public boolean hasMinutes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMinutes() {
      return minutes_;
    }
    
    // optional int32 seconds = 3 [default = 0];
    public static final int SECONDS_FIELD_NUMBER = 3;
    private int seconds_;
    public boolean hasSeconds() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSeconds() {
      return seconds_;
    }
    
    // optional int32 utc_offset = 4 [default = 0];
    public static final int UTC_OFFSET_FIELD_NUMBER = 4;
    private int utcOffset_;
    public boolean hasUtcOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getUtcOffset() {
      return utcOffset_;
    }
    
    private void initFields() {
      hours_ = 0;
      minutes_ = 0;
      seconds_ = 0;
      utcOffset_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, hours_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minutes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, utcOffset_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, hours_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minutes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, utcOffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Time_PB_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Time_PB_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hours_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minutes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        seconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        utcOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hours_ = hours_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minutes_ = minutes_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seconds_ = seconds_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.utcOffset_ = utcOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance()) return this;
        if (other.hasHours()) {
          setHours(other.getHours());
        }
        if (other.hasMinutes()) {
          setMinutes(other.getMinutes());
        }
        if (other.hasSeconds()) {
          setSeconds(other.getSeconds());
        }
        if (other.hasUtcOffset()) {
          setUtcOffset(other.getUtcOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hours_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minutes_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seconds_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              utcOffset_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 hours = 1 [default = 0];
      private int hours_ ;
      public boolean hasHours() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getHours() {
        return hours_;
      }
      public Builder setHours(int value) {
        bitField0_ |= 0x00000001;
        hours_ = value;
        onChanged();
        return this;
      }
      public Builder clearHours() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hours_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 minutes = 2 [default = 0];
      private int minutes_ ;
      public boolean hasMinutes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMinutes() {
        return minutes_;
      }
      public Builder setMinutes(int value) {
        bitField0_ |= 0x00000002;
        minutes_ = value;
        onChanged();
        return this;
      }
      public Builder clearMinutes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minutes_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 seconds = 3 [default = 0];
      private int seconds_ ;
      public boolean hasSeconds() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getSeconds() {
        return seconds_;
      }
      public Builder setSeconds(int value) {
        bitField0_ |= 0x00000004;
        seconds_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeconds() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seconds_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 utc_offset = 4 [default = 0];
      private int utcOffset_ ;
      public boolean hasUtcOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getUtcOffset() {
        return utcOffset_;
      }
      public Builder setUtcOffset(int value) {
        bitField0_ |= 0x00000008;
        utcOffset_ = value;
        onChanged();
        return this;
      }
      public Builder clearUtcOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        utcOffset_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Time_PB)
    }
    
    static {
      defaultInstance = new Time_PB(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Time_PB)
  }
  
  public interface Date_PBOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 year = 1 [default = 0];
    boolean hasYear();
    int getYear();
    
    // optional int32 month = 2 [default = 0];
    boolean hasMonth();
    int getMonth();
    
    // optional int32 day = 3 [default = 0];
    boolean hasDay();
    int getDay();
    
    // optional .Time_PB time = 4;
    boolean hasTime();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB getTime();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder getTimeOrBuilder();
  }
  public static final class Date_PB extends
      com.google.protobuf.GeneratedMessage
      implements Date_PBOrBuilder {
    // Use Date_PB.newBuilder() to construct.
    private Date_PB(Builder builder) {
      super(builder);
    }
    private Date_PB(boolean noInit) {}
    
    private static final Date_PB defaultInstance;
    public static Date_PB getDefaultInstance() {
      return defaultInstance;
    }
    
    public Date_PB getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Date_PB_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Date_PB_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 year = 1 [default = 0];
    public static final int YEAR_FIELD_NUMBER = 1;
    private int year_;
    public boolean hasYear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getYear() {
      return year_;
    }
    
    // optional int32 month = 2 [default = 0];
    public static final int MONTH_FIELD_NUMBER = 2;
    private int month_;
    public boolean hasMonth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMonth() {
      return month_;
    }
    
    // optional int32 day = 3 [default = 0];
    public static final int DAY_FIELD_NUMBER = 3;
    private int day_;
    public boolean hasDay() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getDay() {
      return day_;
    }
    
    // optional .Time_PB time = 4;
    public static final int TIME_FIELD_NUMBER = 4;
    private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB getTime() {
      return time_;
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder getTimeOrBuilder() {
      return time_;
    }
    
    private void initFields() {
      year_ = 0;
      month_ = 0;
      day_ = 0;
      time_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, year_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, month_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, day_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, time_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, year_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, month_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, day_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Date_PB_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_Date_PB_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        month_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        day_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (timeBuilder_ == null) {
          time_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.year_ = year_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.month_ = month_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.day_ = day_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (timeBuilder_ == null) {
          result.time_ = time_;
        } else {
          result.time_ = timeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB.getDefaultInstance()) return this;
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasMonth()) {
          setMonth(other.getMonth());
        }
        if (other.hasDay()) {
          setDay(other.getDay());
        }
        if (other.hasTime()) {
          mergeTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              year_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              month_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              day_ = input.readInt32();
              break;
            }
            case 34: {
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder subBuilder = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.newBuilder();
              if (hasTime()) {
                subBuilder.mergeFrom(getTime());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTime(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 year = 1 [default = 0];
      private int year_ ;
      public boolean hasYear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getYear() {
        return year_;
      }
      public Builder setYear(int value) {
        bitField0_ |= 0x00000001;
        year_ = value;
        onChanged();
        return this;
      }
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        year_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 month = 2 [default = 0];
      private int month_ ;
      public boolean hasMonth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMonth() {
        return month_;
      }
      public Builder setMonth(int value) {
        bitField0_ |= 0x00000002;
        month_ = value;
        onChanged();
        return this;
      }
      public Builder clearMonth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        month_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 day = 3 [default = 0];
      private int day_ ;
      public boolean hasDay() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getDay() {
        return day_;
      }
      public Builder setDay(int value) {
        bitField0_ |= 0x00000004;
        day_ = value;
        onChanged();
        return this;
      }
      public Builder clearDay() {
        bitField0_ = (bitField0_ & ~0x00000004);
        day_ = 0;
        onChanged();
        return this;
      }
      
      // optional .Time_PB time = 4;
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB time_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder> timeBuilder_;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB getTime() {
        if (timeBuilder_ == null) {
          return time_;
        } else {
          return timeBuilder_.getMessage();
        }
      }
      public Builder setTime(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          time_ = value;
          onChanged();
        } else {
          timeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setTime(
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder builderForValue) {
        if (timeBuilder_ == null) {
          time_ = builderForValue.build();
          onChanged();
        } else {
          timeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeTime(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB value) {
        if (timeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              time_ != edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance()) {
            time_ =
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.newBuilder(time_).mergeFrom(value).buildPartial();
          } else {
            time_ = value;
          }
          onChanged();
        } else {
          timeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearTime() {
        if (timeBuilder_ == null) {
          time_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.getDefaultInstance();
          onChanged();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder getTimeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTimeFieldBuilder().getBuilder();
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder getTimeOrBuilder() {
        if (timeBuilder_ != null) {
          return timeBuilder_.getMessageOrBuilder();
        } else {
          return time_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder> 
          getTimeFieldBuilder() {
        if (timeBuilder_ == null) {
          timeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PBOrBuilder>(
                  time_,
                  getParentForChildren(),
                  isClean());
          time_ = null;
        }
        return timeBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Date_PB)
    }
    
    static {
      defaultInstance = new Date_PB(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Date_PB)
  }
  
  public interface DummyMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string msg = 1;
    boolean hasMsg();
    String getMsg();
  }
  public static final class DummyMessage extends
      com.google.protobuf.GeneratedMessage
      implements DummyMessageOrBuilder {
    // Use DummyMessage.newBuilder() to construct.
    private DummyMessage(Builder builder) {
      super(builder);
    }
    private DummyMessage(boolean noInit) {}
    
    private static final DummyMessage defaultInstance;
    public static DummyMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public DummyMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_DummyMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_DummyMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string msg = 1;
    public static final int MSG_FIELD_NUMBER = 1;
    private java.lang.Object msg_;
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          msg_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      msg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_DummyMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_DummyMessage_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msg_ = msg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage.getDefaultInstance()) return this;
        if (other.hasMsg()) {
          setMsg(other.getMsg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msg_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string msg = 1;
      private java.lang.Object msg_ = "";
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMsg(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msg_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      void setMsg(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        msg_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:DummyMessage)
    }
    
    static {
      defaultInstance = new DummyMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DummyMessage)
  }
  
  public interface GenericArrayOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .ProtocolBufferScalarType scalar_type = 1;
    boolean hasScalarType();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType getScalarType();
    
    // repeated string string_value = 2;
    java.util.List<String> getStringValueList();
    int getStringValueCount();
    String getStringValue(int index);
    
    // repeated bool bool_value = 3;
    java.util.List<java.lang.Boolean> getBoolValueList();
    int getBoolValueCount();
    boolean getBoolValue(int index);
    
    // repeated bytes bytes_value = 4;
    java.util.List<com.google.protobuf.ByteString> getBytesValueList();
    int getBytesValueCount();
    com.google.protobuf.ByteString getBytesValue(int index);
    
    // repeated double double_value = 5;
    java.util.List<java.lang.Double> getDoubleValueList();
    int getDoubleValueCount();
    double getDoubleValue(int index);
    
    // repeated float float_value = 6;
    java.util.List<java.lang.Float> getFloatValueList();
    int getFloatValueCount();
    float getFloatValue(int index);
    
    // repeated int32 int32_value = 7;
    java.util.List<java.lang.Integer> getInt32ValueList();
    int getInt32ValueCount();
    int getInt32Value(int index);
    
    // repeated int64 int64_value = 8;
    java.util.List<java.lang.Long> getInt64ValueList();
    int getInt64ValueCount();
    long getInt64Value(int index);
    
    // repeated sint32 sint32_value = 9;
    java.util.List<java.lang.Integer> getSint32ValueList();
    int getSint32ValueCount();
    int getSint32Value(int index);
    
    // repeated sint64 sint64_value = 10;
    java.util.List<java.lang.Long> getSint64ValueList();
    int getSint64ValueCount();
    long getSint64Value(int index);
    
    // repeated uint32 uint32_value = 11;
    java.util.List<java.lang.Integer> getUint32ValueList();
    int getUint32ValueCount();
    int getUint32Value(int index);
    
    // repeated uint64 uint64_value = 12;
    java.util.List<java.lang.Long> getUint64ValueList();
    int getUint64ValueCount();
    long getUint64Value(int index);
    
    // repeated sfixed32 sfixed32_value = 13;
    java.util.List<java.lang.Integer> getSfixed32ValueList();
    int getSfixed32ValueCount();
    int getSfixed32Value(int index);
    
    // repeated sfixed64 sfixed64_value = 14;
    java.util.List<java.lang.Long> getSfixed64ValueList();
    int getSfixed64ValueCount();
    long getSfixed64Value(int index);
    
    // repeated fixed32 fixed32_value = 15;
    java.util.List<java.lang.Integer> getFixed32ValueList();
    int getFixed32ValueCount();
    int getFixed32Value(int index);
    
    // repeated fixed64 fixed64_value = 16;
    java.util.List<java.lang.Long> getFixed64ValueList();
    int getFixed64ValueCount();
    long getFixed64Value(int index);
  }
  public static final class GenericArray extends
      com.google.protobuf.GeneratedMessage
      implements GenericArrayOrBuilder {
    // Use GenericArray.newBuilder() to construct.
    private GenericArray(Builder builder) {
      super(builder);
    }
    private GenericArray(boolean noInit) {}
    
    private static final GenericArray defaultInstance;
    public static GenericArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public GenericArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericArray_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .ProtocolBufferScalarType scalar_type = 1;
    public static final int SCALAR_TYPE_FIELD_NUMBER = 1;
    private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType scalarType_;
    public boolean hasScalarType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType getScalarType() {
      return scalarType_;
    }
    
    // repeated string string_value = 2;
    public static final int STRING_VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList stringValue_;
    public java.util.List<String>
        getStringValueList() {
      return stringValue_;
    }
    public int getStringValueCount() {
      return stringValue_.size();
    }
    public String getStringValue(int index) {
      return stringValue_.get(index);
    }
    
    // repeated bool bool_value = 3;
    public static final int BOOL_VALUE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> boolValue_;
    public java.util.List<java.lang.Boolean>
        getBoolValueList() {
      return boolValue_;
    }
    public int getBoolValueCount() {
      return boolValue_.size();
    }
    public boolean getBoolValue(int index) {
      return boolValue_.get(index);
    }
    
    // repeated bytes bytes_value = 4;
    public static final int BYTES_VALUE_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> bytesValue_;
    public java.util.List<com.google.protobuf.ByteString>
        getBytesValueList() {
      return bytesValue_;
    }
    public int getBytesValueCount() {
      return bytesValue_.size();
    }
    public com.google.protobuf.ByteString getBytesValue(int index) {
      return bytesValue_.get(index);
    }
    
    // repeated double double_value = 5;
    public static final int DOUBLE_VALUE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Double> doubleValue_;
    public java.util.List<java.lang.Double>
        getDoubleValueList() {
      return doubleValue_;
    }
    public int getDoubleValueCount() {
      return doubleValue_.size();
    }
    public double getDoubleValue(int index) {
      return doubleValue_.get(index);
    }
    
    // repeated float float_value = 6;
    public static final int FLOAT_VALUE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Float> floatValue_;
    public java.util.List<java.lang.Float>
        getFloatValueList() {
      return floatValue_;
    }
    public int getFloatValueCount() {
      return floatValue_.size();
    }
    public float getFloatValue(int index) {
      return floatValue_.get(index);
    }
    
    // repeated int32 int32_value = 7;
    public static final int INT32_VALUE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> int32Value_;
    public java.util.List<java.lang.Integer>
        getInt32ValueList() {
      return int32Value_;
    }
    public int getInt32ValueCount() {
      return int32Value_.size();
    }
    public int getInt32Value(int index) {
      return int32Value_.get(index);
    }
    
    // repeated int64 int64_value = 8;
    public static final int INT64_VALUE_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> int64Value_;
    public java.util.List<java.lang.Long>
        getInt64ValueList() {
      return int64Value_;
    }
    public int getInt64ValueCount() {
      return int64Value_.size();
    }
    public long getInt64Value(int index) {
      return int64Value_.get(index);
    }
    
    // repeated sint32 sint32_value = 9;
    public static final int SINT32_VALUE_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> sint32Value_;
    public java.util.List<java.lang.Integer>
        getSint32ValueList() {
      return sint32Value_;
    }
    public int getSint32ValueCount() {
      return sint32Value_.size();
    }
    public int getSint32Value(int index) {
      return sint32Value_.get(index);
    }
    
    // repeated sint64 sint64_value = 10;
    public static final int SINT64_VALUE_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> sint64Value_;
    public java.util.List<java.lang.Long>
        getSint64ValueList() {
      return sint64Value_;
    }
    public int getSint64ValueCount() {
      return sint64Value_.size();
    }
    public long getSint64Value(int index) {
      return sint64Value_.get(index);
    }
    
    // repeated uint32 uint32_value = 11;
    public static final int UINT32_VALUE_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> uint32Value_;
    public java.util.List<java.lang.Integer>
        getUint32ValueList() {
      return uint32Value_;
    }
    public int getUint32ValueCount() {
      return uint32Value_.size();
    }
    public int getUint32Value(int index) {
      return uint32Value_.get(index);
    }
    
    // repeated uint64 uint64_value = 12;
    public static final int UINT64_VALUE_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> uint64Value_;
    public java.util.List<java.lang.Long>
        getUint64ValueList() {
      return uint64Value_;
    }
    public int getUint64ValueCount() {
      return uint64Value_.size();
    }
    public long getUint64Value(int index) {
      return uint64Value_.get(index);
    }
    
    // repeated sfixed32 sfixed32_value = 13;
    public static final int SFIXED32_VALUE_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> sfixed32Value_;
    public java.util.List<java.lang.Integer>
        getSfixed32ValueList() {
      return sfixed32Value_;
    }
    public int getSfixed32ValueCount() {
      return sfixed32Value_.size();
    }
    public int getSfixed32Value(int index) {
      return sfixed32Value_.get(index);
    }
    
    // repeated sfixed64 sfixed64_value = 14;
    public static final int SFIXED64_VALUE_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Long> sfixed64Value_;
    public java.util.List<java.lang.Long>
        getSfixed64ValueList() {
      return sfixed64Value_;
    }
    public int getSfixed64ValueCount() {
      return sfixed64Value_.size();
    }
    public long getSfixed64Value(int index) {
      return sfixed64Value_.get(index);
    }
    
    // repeated fixed32 fixed32_value = 15;
    public static final int FIXED32_VALUE_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> fixed32Value_;
    public java.util.List<java.lang.Integer>
        getFixed32ValueList() {
      return fixed32Value_;
    }
    public int getFixed32ValueCount() {
      return fixed32Value_.size();
    }
    public int getFixed32Value(int index) {
      return fixed32Value_.get(index);
    }
    
    // repeated fixed64 fixed64_value = 16;
    public static final int FIXED64_VALUE_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Long> fixed64Value_;
    public java.util.List<java.lang.Long>
        getFixed64ValueList() {
      return fixed64Value_;
    }
    public int getFixed64ValueCount() {
      return fixed64Value_.size();
    }
    public long getFixed64Value(int index) {
      return fixed64Value_.get(index);
    }
    
    private void initFields() {
      scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
      stringValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      boolValue_ = java.util.Collections.emptyList();;
      bytesValue_ = java.util.Collections.emptyList();;
      doubleValue_ = java.util.Collections.emptyList();;
      floatValue_ = java.util.Collections.emptyList();;
      int32Value_ = java.util.Collections.emptyList();;
      int64Value_ = java.util.Collections.emptyList();;
      sint32Value_ = java.util.Collections.emptyList();;
      sint64Value_ = java.util.Collections.emptyList();;
      uint32Value_ = java.util.Collections.emptyList();;
      uint64Value_ = java.util.Collections.emptyList();;
      sfixed32Value_ = java.util.Collections.emptyList();;
      sfixed64Value_ = java.util.Collections.emptyList();;
      fixed32Value_ = java.util.Collections.emptyList();;
      fixed64Value_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, scalarType_.getNumber());
      }
      for (int i = 0; i < stringValue_.size(); i++) {
        output.writeBytes(2, stringValue_.getByteString(i));
      }
      for (int i = 0; i < boolValue_.size(); i++) {
        output.writeBool(3, boolValue_.get(i));
      }
      for (int i = 0; i < bytesValue_.size(); i++) {
        output.writeBytes(4, bytesValue_.get(i));
      }
      for (int i = 0; i < doubleValue_.size(); i++) {
        output.writeDouble(5, doubleValue_.get(i));
      }
      for (int i = 0; i < floatValue_.size(); i++) {
        output.writeFloat(6, floatValue_.get(i));
      }
      for (int i = 0; i < int32Value_.size(); i++) {
        output.writeInt32(7, int32Value_.get(i));
      }
      for (int i = 0; i < int64Value_.size(); i++) {
        output.writeInt64(8, int64Value_.get(i));
      }
      for (int i = 0; i < sint32Value_.size(); i++) {
        output.writeSInt32(9, sint32Value_.get(i));
      }
      for (int i = 0; i < sint64Value_.size(); i++) {
        output.writeSInt64(10, sint64Value_.get(i));
      }
      for (int i = 0; i < uint32Value_.size(); i++) {
        output.writeUInt32(11, uint32Value_.get(i));
      }
      for (int i = 0; i < uint64Value_.size(); i++) {
        output.writeUInt64(12, uint64Value_.get(i));
      }
      for (int i = 0; i < sfixed32Value_.size(); i++) {
        output.writeSFixed32(13, sfixed32Value_.get(i));
      }
      for (int i = 0; i < sfixed64Value_.size(); i++) {
        output.writeSFixed64(14, sfixed64Value_.get(i));
      }
      for (int i = 0; i < fixed32Value_.size(); i++) {
        output.writeFixed32(15, fixed32Value_.get(i));
      }
      for (int i = 0; i < fixed64Value_.size(); i++) {
        output.writeFixed64(16, fixed64Value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, scalarType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(stringValue_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStringValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolValueList().size();
        size += dataSize;
        size += 1 * getBoolValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytesValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytesValue_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleValueList().size();
        size += dataSize;
        size += 1 * getDoubleValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatValueList().size();
        size += dataSize;
        size += 1 * getFloatValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Value_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32ValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Value_.get(i));
        }
        size += dataSize;
        size += 1 * getInt64ValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32Value_.get(i));
        }
        size += dataSize;
        size += 1 * getSint32ValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64Value_.get(i));
        }
        size += dataSize;
        size += 1 * getSint64ValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32Value_.get(i));
        }
        size += dataSize;
        size += 1 * getUint32ValueList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64Value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64Value_.get(i));
        }
        size += dataSize;
        size += 1 * getUint64ValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32ValueList().size();
        size += dataSize;
        size += 1 * getSfixed32ValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64ValueList().size();
        size += dataSize;
        size += 1 * getSfixed64ValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32ValueList().size();
        size += dataSize;
        size += 1 * getFixed32ValueList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64ValueList().size();
        size += dataSize;
        size += 2 * getFixed64ValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericArray_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericArray_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
        bitField0_ = (bitField0_ & ~0x00000001);
        stringValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        boolValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        bytesValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        doubleValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        floatValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        int32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        int64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        sint32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        sint64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        uint32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        uint64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00001000);
        sfixed64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00002000);
        fixed32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00004000);
        fixed64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.scalarType_ = scalarType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          stringValue_ = new com.google.protobuf.UnmodifiableLazyStringList(
              stringValue_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.stringValue_ = stringValue_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          boolValue_ = java.util.Collections.unmodifiableList(boolValue_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.boolValue_ = boolValue_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          bytesValue_ = java.util.Collections.unmodifiableList(bytesValue_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bytesValue_ = bytesValue_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          doubleValue_ = java.util.Collections.unmodifiableList(doubleValue_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.doubleValue_ = doubleValue_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          floatValue_ = java.util.Collections.unmodifiableList(floatValue_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.floatValue_ = floatValue_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          int32Value_ = java.util.Collections.unmodifiableList(int32Value_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.int32Value_ = int32Value_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          int64Value_ = java.util.Collections.unmodifiableList(int64Value_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.int64Value_ = int64Value_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          sint32Value_ = java.util.Collections.unmodifiableList(sint32Value_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.sint32Value_ = sint32Value_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          sint64Value_ = java.util.Collections.unmodifiableList(sint64Value_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.sint64Value_ = sint64Value_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          uint32Value_ = java.util.Collections.unmodifiableList(uint32Value_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.uint32Value_ = uint32Value_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          uint64Value_ = java.util.Collections.unmodifiableList(uint64Value_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.uint64Value_ = uint64Value_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          sfixed32Value_ = java.util.Collections.unmodifiableList(sfixed32Value_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.sfixed32Value_ = sfixed32Value_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          sfixed64Value_ = java.util.Collections.unmodifiableList(sfixed64Value_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.sfixed64Value_ = sfixed64Value_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          fixed32Value_ = java.util.Collections.unmodifiableList(fixed32Value_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.fixed32Value_ = fixed32Value_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          fixed64Value_ = java.util.Collections.unmodifiableList(fixed64Value_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.fixed64Value_ = fixed64Value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray.getDefaultInstance()) return this;
        if (other.hasScalarType()) {
          setScalarType(other.getScalarType());
        }
        if (!other.stringValue_.isEmpty()) {
          if (stringValue_.isEmpty()) {
            stringValue_ = other.stringValue_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureStringValueIsMutable();
            stringValue_.addAll(other.stringValue_);
          }
          onChanged();
        }
        if (!other.boolValue_.isEmpty()) {
          if (boolValue_.isEmpty()) {
            boolValue_ = other.boolValue_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBoolValueIsMutable();
            boolValue_.addAll(other.boolValue_);
          }
          onChanged();
        }
        if (!other.bytesValue_.isEmpty()) {
          if (bytesValue_.isEmpty()) {
            bytesValue_ = other.bytesValue_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBytesValueIsMutable();
            bytesValue_.addAll(other.bytesValue_);
          }
          onChanged();
        }
        if (!other.doubleValue_.isEmpty()) {
          if (doubleValue_.isEmpty()) {
            doubleValue_ = other.doubleValue_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDoubleValueIsMutable();
            doubleValue_.addAll(other.doubleValue_);
          }
          onChanged();
        }
        if (!other.floatValue_.isEmpty()) {
          if (floatValue_.isEmpty()) {
            floatValue_ = other.floatValue_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFloatValueIsMutable();
            floatValue_.addAll(other.floatValue_);
          }
          onChanged();
        }
        if (!other.int32Value_.isEmpty()) {
          if (int32Value_.isEmpty()) {
            int32Value_ = other.int32Value_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureInt32ValueIsMutable();
            int32Value_.addAll(other.int32Value_);
          }
          onChanged();
        }
        if (!other.int64Value_.isEmpty()) {
          if (int64Value_.isEmpty()) {
            int64Value_ = other.int64Value_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureInt64ValueIsMutable();
            int64Value_.addAll(other.int64Value_);
          }
          onChanged();
        }
        if (!other.sint32Value_.isEmpty()) {
          if (sint32Value_.isEmpty()) {
            sint32Value_ = other.sint32Value_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureSint32ValueIsMutable();
            sint32Value_.addAll(other.sint32Value_);
          }
          onChanged();
        }
        if (!other.sint64Value_.isEmpty()) {
          if (sint64Value_.isEmpty()) {
            sint64Value_ = other.sint64Value_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureSint64ValueIsMutable();
            sint64Value_.addAll(other.sint64Value_);
          }
          onChanged();
        }
        if (!other.uint32Value_.isEmpty()) {
          if (uint32Value_.isEmpty()) {
            uint32Value_ = other.uint32Value_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureUint32ValueIsMutable();
            uint32Value_.addAll(other.uint32Value_);
          }
          onChanged();
        }
        if (!other.uint64Value_.isEmpty()) {
          if (uint64Value_.isEmpty()) {
            uint64Value_ = other.uint64Value_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureUint64ValueIsMutable();
            uint64Value_.addAll(other.uint64Value_);
          }
          onChanged();
        }
        if (!other.sfixed32Value_.isEmpty()) {
          if (sfixed32Value_.isEmpty()) {
            sfixed32Value_ = other.sfixed32Value_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureSfixed32ValueIsMutable();
            sfixed32Value_.addAll(other.sfixed32Value_);
          }
          onChanged();
        }
        if (!other.sfixed64Value_.isEmpty()) {
          if (sfixed64Value_.isEmpty()) {
            sfixed64Value_ = other.sfixed64Value_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureSfixed64ValueIsMutable();
            sfixed64Value_.addAll(other.sfixed64Value_);
          }
          onChanged();
        }
        if (!other.fixed32Value_.isEmpty()) {
          if (fixed32Value_.isEmpty()) {
            fixed32Value_ = other.fixed32Value_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureFixed32ValueIsMutable();
            fixed32Value_.addAll(other.fixed32Value_);
          }
          onChanged();
        }
        if (!other.fixed64Value_.isEmpty()) {
          if (fixed64Value_.isEmpty()) {
            fixed64Value_ = other.fixed64Value_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureFixed64ValueIsMutable();
            fixed64Value_.addAll(other.fixed64Value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType value = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                scalarType_ = value;
              }
              break;
            }
            case 18: {
              ensureStringValueIsMutable();
              stringValue_.add(input.readBytes());
              break;
            }
            case 24: {
              ensureBoolValueIsMutable();
              boolValue_.add(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addBoolValue(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              ensureBytesValueIsMutable();
              bytesValue_.add(input.readBytes());
              break;
            }
            case 41: {
              ensureDoubleValueIsMutable();
              doubleValue_.add(input.readDouble());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDoubleValue(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 53: {
              ensureFloatValueIsMutable();
              floatValue_.add(input.readFloat());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFloatValue(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              ensureInt32ValueIsMutable();
              int32Value_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInt32Value(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              ensureInt64ValueIsMutable();
              int64Value_.add(input.readInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInt64Value(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              ensureSint32ValueIsMutable();
              sint32Value_.add(input.readSInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSint32Value(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              ensureSint64ValueIsMutable();
              sint64Value_.add(input.readSInt64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSint64Value(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              ensureUint32ValueIsMutable();
              uint32Value_.add(input.readUInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUint32Value(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              ensureUint64ValueIsMutable();
              uint64Value_.add(input.readUInt64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUint64Value(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 109: {
              ensureSfixed32ValueIsMutable();
              sfixed32Value_.add(input.readSFixed32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSfixed32Value(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 113: {
              ensureSfixed64ValueIsMutable();
              sfixed64Value_.add(input.readSFixed64());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSfixed64Value(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 125: {
              ensureFixed32ValueIsMutable();
              fixed32Value_.add(input.readFixed32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFixed32Value(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 129: {
              ensureFixed64ValueIsMutable();
              fixed64Value_.add(input.readFixed64());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFixed64Value(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .ProtocolBufferScalarType scalar_type = 1;
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
      public boolean hasScalarType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType getScalarType() {
        return scalarType_;
      }
      public Builder setScalarType(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        scalarType_ = value;
        onChanged();
        return this;
      }
      public Builder clearScalarType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        scalarType_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.ProtocolBufferScalarType.STRING;
        onChanged();
        return this;
      }
      
      // repeated string string_value = 2;
      private com.google.protobuf.LazyStringList stringValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          stringValue_ = new com.google.protobuf.LazyStringArrayList(stringValue_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getStringValueList() {
        return java.util.Collections.unmodifiableList(stringValue_);
      }
      public int getStringValueCount() {
        return stringValue_.size();
      }
      public String getStringValue(int index) {
        return stringValue_.get(index);
      }
      public Builder setStringValue(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValueIsMutable();
        stringValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addStringValue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValueIsMutable();
        stringValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllStringValue(
          java.lang.Iterable<String> values) {
        ensureStringValueIsMutable();
        super.addAll(values, stringValue_);
        onChanged();
        return this;
      }
      public Builder clearStringValue() {
        stringValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addStringValue(com.google.protobuf.ByteString value) {
        ensureStringValueIsMutable();
        stringValue_.add(value);
        onChanged();
      }
      
      // repeated bool bool_value = 3;
      private java.util.List<java.lang.Boolean> boolValue_ = java.util.Collections.emptyList();;
      private void ensureBoolValueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          boolValue_ = new java.util.ArrayList<java.lang.Boolean>(boolValue_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Boolean>
          getBoolValueList() {
        return java.util.Collections.unmodifiableList(boolValue_);
      }
      public int getBoolValueCount() {
        return boolValue_.size();
      }
      public boolean getBoolValue(int index) {
        return boolValue_.get(index);
      }
      public Builder setBoolValue(
          int index, boolean value) {
        ensureBoolValueIsMutable();
        boolValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBoolValue(boolean value) {
        ensureBoolValueIsMutable();
        boolValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBoolValue(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolValueIsMutable();
        super.addAll(values, boolValue_);
        onChanged();
        return this;
      }
      public Builder clearBoolValue() {
        boolValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated bytes bytes_value = 4;
      private java.util.List<com.google.protobuf.ByteString> bytesValue_ = java.util.Collections.emptyList();;
      private void ensureBytesValueIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          bytesValue_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesValue_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<com.google.protobuf.ByteString>
          getBytesValueList() {
        return java.util.Collections.unmodifiableList(bytesValue_);
      }
      public int getBytesValueCount() {
        return bytesValue_.size();
      }
      public com.google.protobuf.ByteString getBytesValue(int index) {
        return bytesValue_.get(index);
      }
      public Builder setBytesValue(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesValueIsMutable();
        bytesValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesValueIsMutable();
        bytesValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBytesValue(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesValueIsMutable();
        super.addAll(values, bytesValue_);
        onChanged();
        return this;
      }
      public Builder clearBytesValue() {
        bytesValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated double double_value = 5;
      private java.util.List<java.lang.Double> doubleValue_ = java.util.Collections.emptyList();;
      private void ensureDoubleValueIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          doubleValue_ = new java.util.ArrayList<java.lang.Double>(doubleValue_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Double>
          getDoubleValueList() {
        return java.util.Collections.unmodifiableList(doubleValue_);
      }
      public int getDoubleValueCount() {
        return doubleValue_.size();
      }
      public double getDoubleValue(int index) {
        return doubleValue_.get(index);
      }
      public Builder setDoubleValue(
          int index, double value) {
        ensureDoubleValueIsMutable();
        doubleValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDoubleValue(double value) {
        ensureDoubleValueIsMutable();
        doubleValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDoubleValue(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleValueIsMutable();
        super.addAll(values, doubleValue_);
        onChanged();
        return this;
      }
      public Builder clearDoubleValue() {
        doubleValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // repeated float float_value = 6;
      private java.util.List<java.lang.Float> floatValue_ = java.util.Collections.emptyList();;
      private void ensureFloatValueIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          floatValue_ = new java.util.ArrayList<java.lang.Float>(floatValue_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<java.lang.Float>
          getFloatValueList() {
        return java.util.Collections.unmodifiableList(floatValue_);
      }
      public int getFloatValueCount() {
        return floatValue_.size();
      }
      public float getFloatValue(int index) {
        return floatValue_.get(index);
      }
      public Builder setFloatValue(
          int index, float value) {
        ensureFloatValueIsMutable();
        floatValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFloatValue(float value) {
        ensureFloatValueIsMutable();
        floatValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFloatValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatValueIsMutable();
        super.addAll(values, floatValue_);
        onChanged();
        return this;
      }
      public Builder clearFloatValue() {
        floatValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      
      // repeated int32 int32_value = 7;
      private java.util.List<java.lang.Integer> int32Value_ = java.util.Collections.emptyList();;
      private void ensureInt32ValueIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          int32Value_ = new java.util.ArrayList<java.lang.Integer>(int32Value_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getInt32ValueList() {
        return java.util.Collections.unmodifiableList(int32Value_);
      }
      public int getInt32ValueCount() {
        return int32Value_.size();
      }
      public int getInt32Value(int index) {
        return int32Value_.get(index);
      }
      public Builder setInt32Value(
          int index, int value) {
        ensureInt32ValueIsMutable();
        int32Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInt32Value(int value) {
        ensureInt32ValueIsMutable();
        int32Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInt32Value(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32ValueIsMutable();
        super.addAll(values, int32Value_);
        onChanged();
        return this;
      }
      public Builder clearInt32Value() {
        int32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // repeated int64 int64_value = 8;
      private java.util.List<java.lang.Long> int64Value_ = java.util.Collections.emptyList();;
      private void ensureInt64ValueIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          int64Value_ = new java.util.ArrayList<java.lang.Long>(int64Value_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<java.lang.Long>
          getInt64ValueList() {
        return java.util.Collections.unmodifiableList(int64Value_);
      }
      public int getInt64ValueCount() {
        return int64Value_.size();
      }
      public long getInt64Value(int index) {
        return int64Value_.get(index);
      }
      public Builder setInt64Value(
          int index, long value) {
        ensureInt64ValueIsMutable();
        int64Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInt64Value(long value) {
        ensureInt64ValueIsMutable();
        int64Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInt64Value(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64ValueIsMutable();
        super.addAll(values, int64Value_);
        onChanged();
        return this;
      }
      public Builder clearInt64Value() {
        int64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      
      // repeated sint32 sint32_value = 9;
      private java.util.List<java.lang.Integer> sint32Value_ = java.util.Collections.emptyList();;
      private void ensureSint32ValueIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          sint32Value_ = new java.util.ArrayList<java.lang.Integer>(sint32Value_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<java.lang.Integer>
          getSint32ValueList() {
        return java.util.Collections.unmodifiableList(sint32Value_);
      }
      public int getSint32ValueCount() {
        return sint32Value_.size();
      }
      public int getSint32Value(int index) {
        return sint32Value_.get(index);
      }
      public Builder setSint32Value(
          int index, int value) {
        ensureSint32ValueIsMutable();
        sint32Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSint32Value(int value) {
        ensureSint32ValueIsMutable();
        sint32Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSint32Value(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32ValueIsMutable();
        super.addAll(values, sint32Value_);
        onChanged();
        return this;
      }
      public Builder clearSint32Value() {
        sint32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      
      // repeated sint64 sint64_value = 10;
      private java.util.List<java.lang.Long> sint64Value_ = java.util.Collections.emptyList();;
      private void ensureSint64ValueIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          sint64Value_ = new java.util.ArrayList<java.lang.Long>(sint64Value_);
          bitField0_ |= 0x00000200;
         }
      }
      public java.util.List<java.lang.Long>
          getSint64ValueList() {
        return java.util.Collections.unmodifiableList(sint64Value_);
      }
      public int getSint64ValueCount() {
        return sint64Value_.size();
      }
      public long getSint64Value(int index) {
        return sint64Value_.get(index);
      }
      public Builder setSint64Value(
          int index, long value) {
        ensureSint64ValueIsMutable();
        sint64Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSint64Value(long value) {
        ensureSint64ValueIsMutable();
        sint64Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSint64Value(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64ValueIsMutable();
        super.addAll(values, sint64Value_);
        onChanged();
        return this;
      }
      public Builder clearSint64Value() {
        sint64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      
      // repeated uint32 uint32_value = 11;
      private java.util.List<java.lang.Integer> uint32Value_ = java.util.Collections.emptyList();;
      private void ensureUint32ValueIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          uint32Value_ = new java.util.ArrayList<java.lang.Integer>(uint32Value_);
          bitField0_ |= 0x00000400;
         }
      }
      public java.util.List<java.lang.Integer>
          getUint32ValueList() {
        return java.util.Collections.unmodifiableList(uint32Value_);
      }
      public int getUint32ValueCount() {
        return uint32Value_.size();
      }
      public int getUint32Value(int index) {
        return uint32Value_.get(index);
      }
      public Builder setUint32Value(
          int index, int value) {
        ensureUint32ValueIsMutable();
        uint32Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUint32Value(int value) {
        ensureUint32ValueIsMutable();
        uint32Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUint32Value(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32ValueIsMutable();
        super.addAll(values, uint32Value_);
        onChanged();
        return this;
      }
      public Builder clearUint32Value() {
        uint32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      
      // repeated uint64 uint64_value = 12;
      private java.util.List<java.lang.Long> uint64Value_ = java.util.Collections.emptyList();;
      private void ensureUint64ValueIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          uint64Value_ = new java.util.ArrayList<java.lang.Long>(uint64Value_);
          bitField0_ |= 0x00000800;
         }
      }
      public java.util.List<java.lang.Long>
          getUint64ValueList() {
        return java.util.Collections.unmodifiableList(uint64Value_);
      }
      public int getUint64ValueCount() {
        return uint64Value_.size();
      }
      public long getUint64Value(int index) {
        return uint64Value_.get(index);
      }
      public Builder setUint64Value(
          int index, long value) {
        ensureUint64ValueIsMutable();
        uint64Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUint64Value(long value) {
        ensureUint64ValueIsMutable();
        uint64Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUint64Value(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64ValueIsMutable();
        super.addAll(values, uint64Value_);
        onChanged();
        return this;
      }
      public Builder clearUint64Value() {
        uint64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      
      // repeated sfixed32 sfixed32_value = 13;
      private java.util.List<java.lang.Integer> sfixed32Value_ = java.util.Collections.emptyList();;
      private void ensureSfixed32ValueIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          sfixed32Value_ = new java.util.ArrayList<java.lang.Integer>(sfixed32Value_);
          bitField0_ |= 0x00001000;
         }
      }
      public java.util.List<java.lang.Integer>
          getSfixed32ValueList() {
        return java.util.Collections.unmodifiableList(sfixed32Value_);
      }
      public int getSfixed32ValueCount() {
        return sfixed32Value_.size();
      }
      public int getSfixed32Value(int index) {
        return sfixed32Value_.get(index);
      }
      public Builder setSfixed32Value(
          int index, int value) {
        ensureSfixed32ValueIsMutable();
        sfixed32Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSfixed32Value(int value) {
        ensureSfixed32ValueIsMutable();
        sfixed32Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSfixed32Value(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32ValueIsMutable();
        super.addAll(values, sfixed32Value_);
        onChanged();
        return this;
      }
      public Builder clearSfixed32Value() {
        sfixed32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      
      // repeated sfixed64 sfixed64_value = 14;
      private java.util.List<java.lang.Long> sfixed64Value_ = java.util.Collections.emptyList();;
      private void ensureSfixed64ValueIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          sfixed64Value_ = new java.util.ArrayList<java.lang.Long>(sfixed64Value_);
          bitField0_ |= 0x00002000;
         }
      }
      public java.util.List<java.lang.Long>
          getSfixed64ValueList() {
        return java.util.Collections.unmodifiableList(sfixed64Value_);
      }
      public int getSfixed64ValueCount() {
        return sfixed64Value_.size();
      }
      public long getSfixed64Value(int index) {
        return sfixed64Value_.get(index);
      }
      public Builder setSfixed64Value(
          int index, long value) {
        ensureSfixed64ValueIsMutable();
        sfixed64Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSfixed64Value(long value) {
        ensureSfixed64ValueIsMutable();
        sfixed64Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSfixed64Value(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64ValueIsMutable();
        super.addAll(values, sfixed64Value_);
        onChanged();
        return this;
      }
      public Builder clearSfixed64Value() {
        sfixed64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      
      // repeated fixed32 fixed32_value = 15;
      private java.util.List<java.lang.Integer> fixed32Value_ = java.util.Collections.emptyList();;
      private void ensureFixed32ValueIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          fixed32Value_ = new java.util.ArrayList<java.lang.Integer>(fixed32Value_);
          bitField0_ |= 0x00004000;
         }
      }
      public java.util.List<java.lang.Integer>
          getFixed32ValueList() {
        return java.util.Collections.unmodifiableList(fixed32Value_);
      }
      public int getFixed32ValueCount() {
        return fixed32Value_.size();
      }
      public int getFixed32Value(int index) {
        return fixed32Value_.get(index);
      }
      public Builder setFixed32Value(
          int index, int value) {
        ensureFixed32ValueIsMutable();
        fixed32Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFixed32Value(int value) {
        ensureFixed32ValueIsMutable();
        fixed32Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFixed32Value(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32ValueIsMutable();
        super.addAll(values, fixed32Value_);
        onChanged();
        return this;
      }
      public Builder clearFixed32Value() {
        fixed32Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }
      
      // repeated fixed64 fixed64_value = 16;
      private java.util.List<java.lang.Long> fixed64Value_ = java.util.Collections.emptyList();;
      private void ensureFixed64ValueIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          fixed64Value_ = new java.util.ArrayList<java.lang.Long>(fixed64Value_);
          bitField0_ |= 0x00008000;
         }
      }
      public java.util.List<java.lang.Long>
          getFixed64ValueList() {
        return java.util.Collections.unmodifiableList(fixed64Value_);
      }
      public int getFixed64ValueCount() {
        return fixed64Value_.size();
      }
      public long getFixed64Value(int index) {
        return fixed64Value_.get(index);
      }
      public Builder setFixed64Value(
          int index, long value) {
        ensureFixed64ValueIsMutable();
        fixed64Value_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFixed64Value(long value) {
        ensureFixed64ValueIsMutable();
        fixed64Value_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFixed64Value(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64ValueIsMutable();
        super.addAll(values, fixed64Value_);
        onChanged();
        return this;
      }
      public Builder clearFixed64Value() {
        fixed64Value_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:GenericArray)
    }
    
    static {
      defaultInstance = new GenericArray(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GenericArray)
  }
  
  public interface GenericParameterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string parameter_name = 1;
    boolean hasParameterName();
    String getParameterName();
    
    // optional .GenericTransport parameter_value = 2;
    boolean hasParameterValue();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport getParameterValue();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder getParameterValueOrBuilder();
  }
  public static final class GenericParameter extends
      com.google.protobuf.GeneratedMessage
      implements GenericParameterOrBuilder {
    // Use GenericParameter.newBuilder() to construct.
    private GenericParameter(Builder builder) {
      super(builder);
    }
    private GenericParameter(boolean noInit) {}
    
    private static final GenericParameter defaultInstance;
    public static GenericParameter getDefaultInstance() {
      return defaultInstance;
    }
    
    public GenericParameter getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameter_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameter_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string parameter_name = 1;
    public static final int PARAMETER_NAME_FIELD_NUMBER = 1;
    private java.lang.Object parameterName_;
    public boolean hasParameterName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getParameterName() {
      java.lang.Object ref = parameterName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          parameterName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getParameterNameBytes() {
      java.lang.Object ref = parameterName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        parameterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .GenericTransport parameter_value = 2;
    public static final int PARAMETER_VALUE_FIELD_NUMBER = 2;
    private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parameterValue_;
    public boolean hasParameterValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport getParameterValue() {
      return parameterValue_;
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder getParameterValueOrBuilder() {
      return parameterValue_;
    }
    
    private void initFields() {
      parameterName_ = "";
      parameterValue_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getParameterNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, parameterValue_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getParameterNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, parameterValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameter_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameter_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParameterValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        parameterName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (parameterValueBuilder_ == null) {
          parameterValue_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance();
        } else {
          parameterValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.parameterName_ = parameterName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (parameterValueBuilder_ == null) {
          result.parameterValue_ = parameterValue_;
        } else {
          result.parameterValue_ = parameterValueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.getDefaultInstance()) return this;
        if (other.hasParameterName()) {
          setParameterName(other.getParameterName());
        }
        if (other.hasParameterValue()) {
          mergeParameterValue(other.getParameterValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              parameterName_ = input.readBytes();
              break;
            }
            case 18: {
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder subBuilder = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.newBuilder();
              if (hasParameterValue()) {
                subBuilder.mergeFrom(getParameterValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setParameterValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string parameter_name = 1;
      private java.lang.Object parameterName_ = "";
      public boolean hasParameterName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getParameterName() {
        java.lang.Object ref = parameterName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          parameterName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setParameterName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        parameterName_ = value;
        onChanged();
        return this;
      }
      public Builder clearParameterName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        parameterName_ = getDefaultInstance().getParameterName();
        onChanged();
        return this;
      }
      void setParameterName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        parameterName_ = value;
        onChanged();
      }
      
      // optional .GenericTransport parameter_value = 2;
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport parameterValue_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder> parameterValueBuilder_;
      public boolean hasParameterValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport getParameterValue() {
        if (parameterValueBuilder_ == null) {
          return parameterValue_;
        } else {
          return parameterValueBuilder_.getMessage();
        }
      }
      public Builder setParameterValue(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport value) {
        if (parameterValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameterValue_ = value;
          onChanged();
        } else {
          parameterValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setParameterValue(
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder builderForValue) {
        if (parameterValueBuilder_ == null) {
          parameterValue_ = builderForValue.build();
          onChanged();
        } else {
          parameterValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeParameterValue(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport value) {
        if (parameterValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              parameterValue_ != edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance()) {
            parameterValue_ =
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.newBuilder(parameterValue_).mergeFrom(value).buildPartial();
          } else {
            parameterValue_ = value;
          }
          onChanged();
        } else {
          parameterValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearParameterValue() {
        if (parameterValueBuilder_ == null) {
          parameterValue_ = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.getDefaultInstance();
          onChanged();
        } else {
          parameterValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder getParameterValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getParameterValueFieldBuilder().getBuilder();
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder getParameterValueOrBuilder() {
        if (parameterValueBuilder_ != null) {
          return parameterValueBuilder_.getMessageOrBuilder();
        } else {
          return parameterValue_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder> 
          getParameterValueFieldBuilder() {
        if (parameterValueBuilder_ == null) {
          parameterValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransportOrBuilder>(
                  parameterValue_,
                  getParentForChildren(),
                  isClean());
          parameterValue_ = null;
        }
        return parameterValueBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:GenericParameter)
    }
    
    static {
      defaultInstance = new GenericParameter(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GenericParameter)
  }
  
  public interface GenericParameterListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .GenericParameter parameters = 1;
    java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter> 
        getParametersList();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter getParameters(int index);
    int getParametersCount();
    java.util.List<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder> 
        getParametersOrBuilderList();
    edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder getParametersOrBuilder(
        int index);
  }
  public static final class GenericParameterList extends
      com.google.protobuf.GeneratedMessage
      implements GenericParameterListOrBuilder {
    // Use GenericParameterList.newBuilder() to construct.
    private GenericParameterList(Builder builder) {
      super(builder);
    }
    private GenericParameterList(boolean noInit) {}
    
    private static final GenericParameterList defaultInstance;
    public static GenericParameterList getDefaultInstance() {
      return defaultInstance;
    }
    
    public GenericParameterList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameterList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameterList_fieldAccessorTable;
    }
    
    // repeated .GenericParameter parameters = 1;
    public static final int PARAMETERS_FIELD_NUMBER = 1;
    private java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter> parameters_;
    public java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter> getParametersList() {
      return parameters_;
    }
    public java.util.List<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    public int getParametersCount() {
      return parameters_.size();
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter getParameters(int index) {
      return parameters_.get(index);
    }
    public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }
    
    private void initFields() {
      parameters_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(1, parameters_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parameters_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameterList_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.internal_static_GenericParameterList_fieldAccessorTable;
      }
      
      // Construct using edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParametersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList.getDescriptor();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList getDefaultInstanceForType() {
        return edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList.getDefaultInstance();
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList build() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList buildPartial() {
        edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList result = new edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList(this);
        int from_bitField0_ = bitField0_;
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList) {
          return mergeFrom((edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList other) {
        if (other == edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList.getDefaultInstance()) return this;
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder subBuilder = edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addParameters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .GenericParameter parameters = 1;
      private java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          parameters_ = new java.util.ArrayList<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter>(parameters_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder> parametersBuilder_;
      
      public java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      public Builder setParameters(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setParameters(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addParameters(edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addParameters(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addParameters(
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addParameters(
          int index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllParameters(
          java.lang.Iterable<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          super.addAll(values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder> 
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.getDefaultInstance());
      }
      public edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.getDefaultInstance());
      }
      public java.util.List<edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder> 
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder, edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:GenericParameterList)
    }
    
    static {
      defaultInstance = new GenericParameterList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:GenericParameterList)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericTransport_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericTransport_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SimpleProperty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SimpleProperty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericPropertyList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericPropertyList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericProperty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericProperty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Time_PB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Time_PB_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Date_PB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Date_PB_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DummyMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DummyMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericArray_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericParameter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericParameterList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericParameterList_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%General/ProtocolBufferTransport.proto\"" +
      "c\n\020GenericTransport\022\017\n\007payload\030\001 \001(\014\022+\n\r" +
      "property_list\030\002 \001(\0132\024.GenericPropertyLis" +
      "t\022\021\n\ttype_name\030\003 \001(\t\"?\n\016SimpleProperty\022\025" +
      "\n\rproperty_name\030\001 \001(\t\022\026\n\016property_value\030" +
      "\002 \001(\t\"9\n\023GenericPropertyList\022\"\n\010property" +
      "\030\001 \003(\0132\020.GenericProperty\"\212\006\n\017GenericProp" +
      "erty\022\025\n\rproperty_name\030\001 \001(\t\022.\n\013scalar_ty" +
      "pe\030\002 \001(\0162\031.ProtocolBufferScalarType\022\024\n\014s" +
      "tring_value\030\003 \001(\t\022\022\n\nbool_value\030\004 \001(\010\022\023\n",
      "\013bytes_value\030\005 \001(\014\022\024\n\014double_value\030\006 \001(\001" +
      "\022\023\n\013float_value\030\007 \001(\002\022\023\n\013int32_value\030\010 \001" +
      "(\005\022\023\n\013int64_value\030\t \001(\003\022\024\n\014sint32_value\030" +
      "\n \001(\021\022\024\n\014sint64_value\030\013 \001(\022\022\024\n\014uint32_va" +
      "lue\030\014 \001(\r\022\024\n\014uint64_value\030\r \001(\004\022\026\n\016sfixe" +
      "d32_value\030\016 \001(\017\022\026\n\016sfixed64_value\030\017 \001(\020\022" +
      "\025\n\rfixed32_value\030\020 \001(\007\022\025\n\rfixed64_value\030" +
      "\021 \001(\006\022\026\n\016string_element\030\022 \003(\t\022\024\n\014bool_el" +
      "ement\030\023 \003(\010\022\025\n\rbytes_element\030\024 \003(\014\022\026\n\016do" +
      "uble_element\030\025 \003(\001\022\025\n\rfloat_element\030\026 \003(",
      "\002\022\025\n\rint32_element\030\027 \003(\005\022\025\n\rint64_elemen" +
      "t\030\030 \003(\003\022\026\n\016sint32_element\030\031 \003(\021\022\026\n\016sint6" +
      "4_element\030\032 \003(\022\022\026\n\016uint32_element\030\033 \003(\r\022" +
      "\026\n\016uint64_element\030\034 \003(\004\022\030\n\020sfixed32_elem" +
      "ent\030\035 \003(\017\022\030\n\020sfixed64_element\030\036 \003(\020\022\027\n\017f" +
      "ixed32_element\030\037 \003(\007\022\027\n\017fixed64_element\030" +
      "  \003(\006\"Z\n\007Time_PB\022\020\n\005hours\030\001 \001(\005:\0010\022\022\n\007mi" +
      "nutes\030\002 \001(\005:\0010\022\022\n\007seconds\030\003 \001(\005:\0010\022\025\n\nut" +
      "c_offset\030\004 \001(\005:\0010\"T\n\007Date_PB\022\017\n\004year\030\001 \001" +
      "(\005:\0010\022\020\n\005month\030\002 \001(\005:\0010\022\016\n\003day\030\003 \001(\005:\0010\022",
      "\026\n\004time\030\004 \001(\0132\010.Time_PB\"\033\n\014DummyMessage\022" +
      "\013\n\003msg\030\001 \001(\t\"\210\003\n\014GenericArray\022.\n\013scalar_" +
      "type\030\001 \001(\0162\031.ProtocolBufferScalarType\022\024\n" +
      "\014string_value\030\002 \003(\t\022\022\n\nbool_value\030\003 \003(\010\022" +
      "\023\n\013bytes_value\030\004 \003(\014\022\024\n\014double_value\030\005 \003" +
      "(\001\022\023\n\013float_value\030\006 \003(\002\022\023\n\013int32_value\030\007" +
      " \003(\005\022\023\n\013int64_value\030\010 \003(\003\022\024\n\014sint32_valu" +
      "e\030\t \003(\021\022\024\n\014sint64_value\030\n \003(\022\022\024\n\014uint32_" +
      "value\030\013 \003(\r\022\024\n\014uint64_value\030\014 \003(\004\022\026\n\016sfi" +
      "xed32_value\030\r \003(\017\022\026\n\016sfixed64_value\030\016 \003(",
      "\020\022\025\n\rfixed32_value\030\017 \003(\007\022\025\n\rfixed64_valu" +
      "e\030\020 \003(\006\"V\n\020GenericParameter\022\026\n\016parameter" +
      "_name\030\001 \001(\t\022*\n\017parameter_value\030\002 \001(\0132\021.G" +
      "enericTransport\"=\n\024GenericParameterList\022" +
      "%\n\nparameters\030\001 \003(\0132\021.GenericParameter*\315" +
      "\003\n\030ProtocolBufferScalarType\022\n\n\006STRING\020\001\022" +
      "\010\n\004BOOL\020\002\022\t\n\005BYTES\020\003\022\n\n\006DOUBLE\020\004\022\t\n\005FLOA" +
      "T\020\005\022\t\n\005INT32\020\006\022\t\n\005INT64\020\007\022\n\n\006SINT32\020\010\022\n\n" +
      "\006SINT64\020\t\022\n\n\006UINT32\020\n\022\n\n\006UINT64\020\013\022\014\n\010SFI" +
      "XED32\020\014\022\014\n\010SFIXED64\020\r\022\013\n\007FIXED32\020\016\022\013\n\007FI",
      "XED64\020\017\022\017\n\013STRING_LIST\020\020\022\r\n\tBOOL_LIST\020\021\022" +
      "\016\n\nBYTES_LIST\020\022\022\017\n\013DOUBLE_LIST\020\023\022\016\n\nFLOA" +
      "T_LIST\020\024\022\016\n\nINT32_LIST\020\025\022\016\n\nINT64_LIST\020\026" +
      "\022\017\n\013SINT32_LIST\020\027\022\017\n\013SINT64_LIST\020\030\022\017\n\013UI" +
      "NT32_LIST\020\031\022\017\n\013UINT64_LIST\020\032\022\021\n\rSFIXED32" +
      "_LIST\020\033\022\021\n\rSFIXED64_LIST\020\034\022\020\n\014FIXED32_LI" +
      "ST\020\035\022\020\n\014FIXED64_LIST\020\036*\204\001\n\rDayOfWeekType" +
      "\022\027\n\023DAY_OF_WEEK_NOT_SET\020\000\022\n\n\006SUNDAY\020\001\022\n\n" +
      "\006MONDAY\020\002\022\013\n\007TUESDAY\020\003\022\r\n\tWEDNESDAY\020\004\022\014\n" +
      "\010THURSDAY\020\005\022\n\n\006FRIDAY\020\006\022\014\n\010SATURDAY\020\007B\'\n",
      "%edu.umich.imlc.protocolbuffer.general"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GenericTransport_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GenericTransport_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericTransport_descriptor,
              new java.lang.String[] { "Payload", "PropertyList", "TypeName", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericTransport.Builder.class);
          internal_static_SimpleProperty_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_SimpleProperty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SimpleProperty_descriptor,
              new java.lang.String[] { "PropertyName", "PropertyValue", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.SimpleProperty.Builder.class);
          internal_static_GenericPropertyList_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_GenericPropertyList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericPropertyList_descriptor,
              new java.lang.String[] { "Property", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericPropertyList.Builder.class);
          internal_static_GenericProperty_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_GenericProperty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericProperty_descriptor,
              new java.lang.String[] { "PropertyName", "ScalarType", "StringValue", "BoolValue", "BytesValue", "DoubleValue", "FloatValue", "Int32Value", "Int64Value", "Sint32Value", "Sint64Value", "Uint32Value", "Uint64Value", "Sfixed32Value", "Sfixed64Value", "Fixed32Value", "Fixed64Value", "StringElement", "BoolElement", "BytesElement", "DoubleElement", "FloatElement", "Int32Element", "Int64Element", "Sint32Element", "Sint64Element", "Uint32Element", "Uint64Element", "Sfixed32Element", "Sfixed64Element", "Fixed32Element", "Fixed64Element", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericProperty.Builder.class);
          internal_static_Time_PB_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_Time_PB_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Time_PB_descriptor,
              new java.lang.String[] { "Hours", "Minutes", "Seconds", "UtcOffset", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Time_PB.Builder.class);
          internal_static_Date_PB_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Date_PB_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Date_PB_descriptor,
              new java.lang.String[] { "Year", "Month", "Day", "Time", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.Date_PB.Builder.class);
          internal_static_DummyMessage_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_DummyMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DummyMessage_descriptor,
              new java.lang.String[] { "Msg", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.DummyMessage.Builder.class);
          internal_static_GenericArray_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_GenericArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericArray_descriptor,
              new java.lang.String[] { "ScalarType", "StringValue", "BoolValue", "BytesValue", "DoubleValue", "FloatValue", "Int32Value", "Int64Value", "Sint32Value", "Sint64Value", "Uint32Value", "Uint64Value", "Sfixed32Value", "Sfixed64Value", "Fixed32Value", "Fixed64Value", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericArray.Builder.class);
          internal_static_GenericParameter_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_GenericParameter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericParameter_descriptor,
              new java.lang.String[] { "ParameterName", "ParameterValue", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameter.Builder.class);
          internal_static_GenericParameterList_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_GenericParameterList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericParameterList_descriptor,
              new java.lang.String[] { "Parameters", },
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList.class,
              edu.umich.imlc.protocolbuffer.general.ProtocolBufferTransport.GenericParameterList.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
